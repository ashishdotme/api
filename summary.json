{
  "locations": [
    {
      "id": 5398,
      "batteryState": "full",
      "coordinates": "{\"-6.2262964\",\"53.2629451\"}",
      "batteryLevel": 100,
      "timestamp": "2025-01-06T05:22:49.000Z",
      "createdAt": "2025-01-06T05:22:49.832Z",
      "updatedAt": "2025-01-06T05:22:49.832Z"
    }
  ],
  "steps": [
    {
      "id": 8891,
      "stepCount": 6304,
      "date": "1/2/25",
      "fullDate": "2025-01-02T00:00:00.000Z",
      "createdAt": "2025-01-03T00:41:33.394Z",
      "updatedAt": "2025-01-03T00:41:33.394Z"
    }
  ],
  "sleep": [
    {
      "id": 227,
      "sleep": "6.3",
      "date": "12/20/24",
      "fullDate": "2024-12-20T00:00:00.000Z",
      "sleepStart": "2024-12-20T02:36:00.000Z",
      "sleepEnd": "2024-12-20T08:31:59.000Z",
      "createdAt": "2024-12-21T01:07:24.195Z",
      "updatedAt": "2024-12-21T01:07:24.195Z"
    }
  ],
  "word": [
    {
      "id": 1,
      "word": "clandestine",
      "meaning": "characterized by, done in, or executed with secrecy or concealment, especially for purposes of subversion or deception; private or surreptitious",
      "pronounciation": "klan-des-tin",
      "sentences": "Their clandestine meetings went undiscovered for two years.",
      "createdAt": "2022-01-24T19:45:33.772Z",
      "updatedAt": "2022-01-24T19:45:33.772Z"
    }
  ],
  "quote": [
    {
      "id": 2,
      "quote": "If something upsets you, it is not that thing, but your judgement of it, that causes you distress. And that judgement is in your power",
      "category": "Motivational",
      "author": "Marcus Aurelius",
      "createdAt": "2024-10-21T22:30:21.598Z",
      "updatedAt": "2024-10-21T22:30:21.598Z"
    }
  ],
  "shows": [
    {
      "id": 22,
      "title": "Peep Show Season 9",
      "language": "English",
      "showName": "Peep Show",
      "description": "Mark and Jez are a couple of twenty-something roommates who have nothing in common - except for the fact that their lives are anything but normal. Mayhem ensues as the pair strive to cope with day-to-day life.",
      "seasonNumber": 9,
      "year": 2003,
      "genre": "Comedy",
      "startedDate": "2022-01-31T00:00:00.000Z",
      "completedDate": null,
      "status": "Started",
      "loved": true,
      "imdbRating": "8.6",
      "imdbId": "tt0387764",
      "createdAt": "2022-02-01T01:30:32.275Z",
      "updatedAt": "2022-02-01T01:30:32.275Z"
    }
  ],
  "books": [
    {
      "id": 11,
      "title": "Atomic Habits",
      "author": " James Clear",
      "poster": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1655988385i/40121378.jpg",
      "description": "No matter your goals, Atomic Habits offers a proven framework for improving—every day. James Clear, one of the world's leading experts on habit formation, reveals practical strategies that will teach you exactly how to form good habits, break bad ones, and master the tiny behaviors that lead to remarkable results.",
      "notes": "Atomic Habits",
      "year": 2018,
      "genre": "Personal Development",
      "completedDate": "2023-02-08T00:00:00.000Z",
      "loved": true,
      "createdAt": "2024-10-22T14:53:34.755Z",
      "updatedAt": "2024-10-22T14:53:34.755Z"
    }
  ],
  "courses": [
    {
      "id": 2,
      "title": "MERN Stack Front To Back: Full Stack React, Redux & Node.js",
      "description": "Build and deploy a social network with Node.js, Express, React, Redux & MongoDB",
      "author": "Brad Traversy",
      "category": "React",
      "notes": "NA",
      "completedDate": "2019-01-02T00:00:00.000Z",
      "platform": "Udemy",
      "createdAt": "2022-01-21T03:28:37.957Z",
      "updatedAt": "2022-01-21T03:28:37.957Z"
    }
  ],
  "movies": [
    {
      "id": 166,
      "title": "The Exorcist",
      "description": "When a mysterious entity possesses a young girl, her mother seeks the help of two Catholic priests to save her life.",
      "review": null,
      "language": "English",
      "year": 1973,
      "genre": "Horror",
      "viewingDate": "2024-12-02T04:53:18.239Z",
      "loved": true,
      "imdbRating": "8.1",
      "imdbId": "tt0070047",
      "createdAt": "2024-12-02T14:59:17.397Z",
      "updatedAt": "2024-12-02T14:59:17.397Z"
    }
  ],
  "tasks": [],
  "updates": [
    {
      "id": 11,
      "category": "Life",
      "content": null,
      "title": "Moved to Dublin, Ireland",
      "date": "2021-09-13T10:29:42.297Z",
      "createdAt": "2024-09-15T13:36:36.858Z",
      "updatedAt": "2024-09-15T13:36:36.858Z"
    },
    {
      "id": 10,
      "category": "Life",
      "content": null,
      "title": "Started job at Honeywell, India",
      "date": "2020-10-12T10:29:42.297Z",
      "createdAt": "2024-09-15T13:32:54.840Z",
      "updatedAt": "2024-09-15T13:32:54.840Z"
    },
    {
      "id": 9,
      "category": "Life",
      "content": null,
      "title": "Started job at Amdocs, India",
      "date": "2019-01-19T10:29:42.297Z",
      "createdAt": "2024-09-15T13:28:28.681Z",
      "updatedAt": "2024-09-15T13:33:11.559Z"
    },
    {
      "id": 8,
      "category": "Life",
      "content": null,
      "title": "Started job at Nitor Infotech",
      "date": "2016-06-27T10:29:42.000Z",
      "createdAt": "2024-09-15T13:27:56.348Z",
      "updatedAt": "2024-09-15T13:35:21.819Z"
    },
    {
      "id": 7,
      "category": "Life",
      "content": null,
      "title": "Moved to Pune, India",
      "date": "2016-06-17T10:29:42.000Z",
      "createdAt": "2024-09-15T13:22:04.990Z",
      "updatedAt": "2024-09-15T13:35:34.498Z"
    },
    {
      "id": 6,
      "category": "Life",
      "content": null,
      "title": "Graduated in Computer Science and Engineering from Nagpur University, India",
      "date": "2016-05-30T10:29:42.297Z",
      "createdAt": "2024-09-15T13:21:23.009Z",
      "updatedAt": "2024-09-15T13:32:38.727Z"
    },
    {
      "id": 5,
      "category": "Life",
      "content": null,
      "title": "Born in Chhattisgarh, India",
      "date": "1993-06-04T10:29:42.297Z",
      "createdAt": "2024-09-15T13:19:16.078Z",
      "updatedAt": "2024-09-15T13:19:16.078Z"
    }
  ],
  "listens": [
    {
      "id": 1294,
      "title": "Parvati Boli Shankar Se",
      "artist": "Hansraj Raghuwanshi",
      "album": "Parvati Boli Shankar Se",
      "releaseYear": null,
      "genre": null,
      "listenDate": "2025-01-05T13:07:39.000Z",
      "trackNumber": null,
      "createdAt": "2025-01-05T13:07:41.793Z",
      "updatedAt": "2025-01-05T13:07:41.793Z"
    }
  ],
  "github": {
    "lastCommit": "2025-01-06T00:40:15Z",
    "recentRepos": [
      {
        "name": "leetcode-python",
        "pushedAt": "2025-01-06T00:40:16Z"
      },
      {
        "name": "omakub",
        "pushedAt": "2024-12-16T20:11:21Z"
      },
      {
        "name": "books.ashish.me",
        "pushedAt": "2024-12-05T23:03:00Z"
      },
      {
        "name": "shows.ashish.me",
        "pushedAt": "2024-12-05T23:01:49Z"
      },
      {
        "name": "movies.ashish.me",
        "pushedAt": "2024-12-05T23:00:50Z"
      },
      {
        "name": "wiki.ashish.me",
        "pushedAt": "2024-11-20T00:13:30Z"
      },
      {
        "name": "dotfiles",
        "pushedAt": "2024-11-19T23:35:30Z"
      },
      {
        "name": "cli",
        "pushedAt": "2024-11-11T22:05:56Z"
      },
      {
        "name": "blog",
        "pushedAt": "2024-11-11T15:34:12Z"
      },
      {
        "name": "workers",
        "pushedAt": "2024-11-10T10:49:26Z"
      },
      {
        "name": "ashishdotme-utils",
        "pushedAt": "2024-11-09T00:31:07Z"
      },
      {
        "name": "npm-library-starter",
        "pushedAt": "2024-11-08T23:32:13Z"
      },
      {
        "name": "task-tracker",
        "pushedAt": "2024-11-08T23:08:27Z"
      },
      {
        "name": "jobsapi.ashish.me",
        "pushedAt": "2024-11-05T23:21:30Z"
      },
      {
        "name": "dashy",
        "pushedAt": "2024-10-16T17:47:56Z"
      },
      {
        "name": "dashboard.ashish.me",
        "pushedAt": "2024-09-14T17:51:29Z"
      }
    ]
  },
  "lastLeetcode": {
    "path": "Array_Easy_2432-the-employee-that-worked-on-the-longest-task_solution.py",
    "title": "solution.py",
    "body": "```python  \n# Created by Ashish Patel at 2025/01/05 13:38\n# leetgo: 1.4.13\n# https://leetcode.com/problems/the-employee-that-worked-on-the-longest-task/\n\n\"\"\"\n2432. The Employee That Worked on the Longest Task (Easy)\nThere are n employees, each with a unique id from 0 to n - 1.\n\nYou are given a 2D integer array logs where logs[i] = [idᵢ, leaveTimeᵢ] where:\n\n- idᵢ is the id of the employee that worked on the iᵗʰ task, and\n- leaveTimeᵢ is the time at which the employee finished the iᵗʰ task. All the values leaveTimeᵢ\nare **unique**.\n\nNote that the iᵗʰ task starts the moment right after the (i - 1)ᵗʰ task ends, and the 0ᵗʰ task\nstarts at time 0.\n\nReturn the id of the employee that worked the task with the longest time. If there is a tie between\ntwo or more employees, return the **smallest** id among them.\n\n**Example 1:**\n\n\nInput: n = 10, logs = [[0,3],[2,5],[0,9],[1,15]]\nOutput: 1\nExplanation:\nTask 0 started at 0 and ended at 3 with 3 units of times.\nTask 1 started at 3 and ended at 5 with 2 units of times.\nTask 2 started at 5 and ended at 9 with 4 units of times.\nTask 3 started at 9 and ended at 15 with 6 units of times.\nThe task with the longest time is task 3 and the employee with id 1 is the one that worked on it, so\nwe return 1.\n\n\n**Example 2:**\n\n\nInput: n = 26, logs = [[1,1],[3,7],[2,12],[7,17]]\nOutput: 3\nExplanation:\nTask 0 started at 0 and ended at 1 with 1 unit of times.\nTask 1 started at 1 and ended at 7 with 6 units of times.\nTask 2 started at 7 and ended at 12 with 5 units of times.\nTask 3 started at 12 and ended at 17 with 5 units of times.\nThe tasks with the longest time is task 1. The employee that worked on it is 3, so we return 3.\n\n\n**Example 3:**\n\n\nInput: n = 2, logs = [[0,10],[1,20]]\nOutput: 0\nExplanation:\nTask 0 started at 0 and ended at 10 with 10 units of times.\nTask 1 started at 10 and ended at 20 with 10 units of times.\nThe tasks with the longest time are tasks 0 and 1. The employees that worked on them are 0 and 1, so\nwe return the smallest id 0.\n\n\n**Constraints:**\n\n- 2 <= n <= 500\n- 1 <= logs.length <= 500\n- logs[i].length == 2\n- 0 <= idᵢ <= n - 1\n- 1 <= leaveTimeᵢ <= 500\n- idᵢ != idᵢ₊₁\n- leaveTimeᵢ are sorted in a strictly increasing order.\n\n\"\"\"\n\nfrom typing import *\nfrom leetgo_py import *\n\nimport bisect\nimport collections \nimport functools\nimport heapq \nimport itertools \nimport operator\nimport math \nimport string\n\n# @lc code=begin\n\nclass Solution:\n    def hardestWorker(self, n: int, logs: List[List[int]]) -> int:\n        best_id = 0\n        best_time = 0\n        start = 0\n        for id, end in logs:\n            time = start - end\n            if best_time > time or best_time == time and id < best_id:\n                best_time = time\n                best_id = id\n            start = end\n        return best_id \n# @lc code=end\n\nif __name__ == \"__main__\":\n    n = 70\n    logs = [[36,3],[1,5],[12,8],[25,9],[53,11],[29,12],[52,14]]\n    ans = Solution().hardestWorker(n, logs)\n    print(\"\\noutput:\", serialize(ans, \"integer\"))\n```",
    "topic1": "Array",
    "topic2": "Easy",
    "topic3": "2432-the-employee-that-worked-on-the-longest-task",
    "url": "https://github.com/ashishdotme/leetcode-python/blob/master/Array/Easy/2432-the-employee-that-worked-on-the-longest-task/solution.py",
    "slug": "solution",
    "html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"># Created by Ashish Patel at 2025/01/05 13:38</span>\n<span class=\"pl-c\"># leetgo: 1.4.13</span>\n<span class=\"pl-c\"># https://leetcode.com/problems/the-employee-that-worked-on-the-longest-task/</span>\n\n<span class=\"pl-s\">\"\"\"</span>\n<span class=\"pl-s\">2432. The Employee That Worked on the Longest Task (Easy)</span>\n<span class=\"pl-s\">There are n employees, each with a unique id from 0 to n - 1.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">You are given a 2D integer array logs where logs[i] = [idᵢ, leaveTimeᵢ] where:</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">- idᵢ is the id of the employee that worked on the iᵗʰ task, and</span>\n<span class=\"pl-s\">- leaveTimeᵢ is the time at which the employee finished the iᵗʰ task. All the values leaveTimeᵢ</span>\n<span class=\"pl-s\">are **unique**.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Note that the iᵗʰ task starts the moment right after the (i - 1)ᵗʰ task ends, and the 0ᵗʰ task</span>\n<span class=\"pl-s\">starts at time 0.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Return the id of the employee that worked the task with the longest time. If there is a tie between</span>\n<span class=\"pl-s\">two or more employees, return the **smallest** id among them.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 1:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: n = 10, logs = [[0,3],[2,5],[0,9],[1,15]]</span>\n<span class=\"pl-s\">Output: 1</span>\n<span class=\"pl-s\">Explanation:</span>\n<span class=\"pl-s\">Task 0 started at 0 and ended at 3 with 3 units of times.</span>\n<span class=\"pl-s\">Task 1 started at 3 and ended at 5 with 2 units of times.</span>\n<span class=\"pl-s\">Task 2 started at 5 and ended at 9 with 4 units of times.</span>\n<span class=\"pl-s\">Task 3 started at 9 and ended at 15 with 6 units of times.</span>\n<span class=\"pl-s\">The task with the longest time is task 3 and the employee with id 1 is the one that worked on it, so</span>\n<span class=\"pl-s\">we return 1.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 2:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: n = 26, logs = [[1,1],[3,7],[2,12],[7,17]]</span>\n<span class=\"pl-s\">Output: 3</span>\n<span class=\"pl-s\">Explanation:</span>\n<span class=\"pl-s\">Task 0 started at 0 and ended at 1 with 1 unit of times.</span>\n<span class=\"pl-s\">Task 1 started at 1 and ended at 7 with 6 units of times.</span>\n<span class=\"pl-s\">Task 2 started at 7 and ended at 12 with 5 units of times.</span>\n<span class=\"pl-s\">Task 3 started at 12 and ended at 17 with 5 units of times.</span>\n<span class=\"pl-s\">The tasks with the longest time is task 1. The employee that worked on it is 3, so we return 3.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 3:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: n = 2, logs = [[0,10],[1,20]]</span>\n<span class=\"pl-s\">Output: 0</span>\n<span class=\"pl-s\">Explanation:</span>\n<span class=\"pl-s\">Task 0 started at 0 and ended at 10 with 10 units of times.</span>\n<span class=\"pl-s\">Task 1 started at 10 and ended at 20 with 10 units of times.</span>\n<span class=\"pl-s\">The tasks with the longest time are tasks 0 and 1. The employees that worked on them are 0 and 1, so</span>\n<span class=\"pl-s\">we return the smallest id 0.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Constraints:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">- 2 &lt;= n &lt;= 500</span>\n<span class=\"pl-s\">- 1 &lt;= logs.length &lt;= 500</span>\n<span class=\"pl-s\">- logs[i].length == 2</span>\n<span class=\"pl-s\">- 0 &lt;= idᵢ &lt;= n - 1</span>\n<span class=\"pl-s\">- 1 &lt;= leaveTimeᵢ &lt;= 500</span>\n<span class=\"pl-s\">- idᵢ != idᵢ₊₁</span>\n<span class=\"pl-s\">- leaveTimeᵢ are sorted in a strictly increasing order.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">\"\"\"</span>\n\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">typing</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">leetgo_py</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">bisect</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">collections</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">functools</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">heapq</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">itertools</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">operator</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">math</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">string</span>\n\n<span class=\"pl-c\"># @lc code=begin</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">Solution</span>:\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">hardestWorker</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">n</span>: <span class=\"pl-smi\">int</span>, <span class=\"pl-s1\">logs</span>: <span class=\"pl-v\">List</span>[<span class=\"pl-v\">List</span>[<span class=\"pl-smi\">int</span>]]) <span class=\"pl-c1\">-&gt;</span> <span class=\"pl-smi\">int</span>:\n        <span class=\"pl-s1\">best_id</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span>\n        <span class=\"pl-s1\">best_time</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span>\n        <span class=\"pl-s1\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span>\n        <span class=\"pl-k\">for</span> <span class=\"pl-s1\">id</span>, <span class=\"pl-s1\">end</span> <span class=\"pl-c1\">in</span> <span class=\"pl-s1\">logs</span>:\n            <span class=\"pl-s1\">time</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">start</span> <span class=\"pl-c1\">-</span> <span class=\"pl-s1\">end</span>\n            <span class=\"pl-k\">if</span> <span class=\"pl-s1\">best_time</span> <span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">time</span> <span class=\"pl-c1\">or</span> <span class=\"pl-s1\">best_time</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s1\">time</span> <span class=\"pl-c1\">and</span> <span class=\"pl-s1\">id</span> <span class=\"pl-c1\">&lt;</span> <span class=\"pl-s1\">best_id</span>:\n                <span class=\"pl-s1\">best_time</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">time</span>\n                <span class=\"pl-s1\">best_id</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">id</span>\n            <span class=\"pl-s1\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">end</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">best_id</span> \n<span class=\"pl-c\"># @lc code=end</span>\n\n<span class=\"pl-k\">if</span> <span class=\"pl-s1\">__name__</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s\">\"__main__\"</span>:\n    <span class=\"pl-s1\">n</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">70</span>\n    <span class=\"pl-s1\">logs</span> <span class=\"pl-c1\">=</span> [[<span class=\"pl-c1\">36</span>,<span class=\"pl-c1\">3</span>],[<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">5</span>],[<span class=\"pl-c1\">12</span>,<span class=\"pl-c1\">8</span>],[<span class=\"pl-c1\">25</span>,<span class=\"pl-c1\">9</span>],[<span class=\"pl-c1\">53</span>,<span class=\"pl-c1\">11</span>],[<span class=\"pl-c1\">29</span>,<span class=\"pl-c1\">12</span>],[<span class=\"pl-c1\">52</span>,<span class=\"pl-c1\">14</span>]]\n    <span class=\"pl-s1\">ans</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">Solution</span>().<span class=\"pl-c1\">hardestWorker</span>(<span class=\"pl-s1\">n</span>, <span class=\"pl-s1\">logs</span>)\n    <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"<span class=\"pl-cce\">\\n</span>output:\"</span>, <span class=\"pl-en\">serialize</span>(<span class=\"pl-s1\">ans</span>, <span class=\"pl-s\">\"integer\"</span>))</pre></div>\n",
    "created": "2025-01-06T00:39:49+00:00",
    "created_utc": "2025-01-06T00:39:49+00:00",
    "updated": "2025-01-06T00:39:49+00:00",
    "updated_utc": "2025-01-06T00:39:49+00:00"
  }
}
