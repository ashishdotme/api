{
  "locations": [
    {
      "id": 5995,
      "batteryState": "unplugged",
      "coordinates": "{\"-6.2262155\",\"53.2630179\"}",
      "batteryLevel": 100,
      "timestamp": "2025-01-08T09:04:31.000Z",
      "createdAt": "2025-01-08T09:04:31.982Z",
      "updatedAt": "2025-01-08T09:04:31.982Z"
    }
  ],
  "steps": [
    {
      "id": 8915,
      "stepCount": 5925,
      "date": "1/6/25",
      "fullDate": "2025-01-06T00:00:00.000Z",
      "createdAt": "2025-01-07T19:41:23.614Z",
      "updatedAt": "2025-01-07T19:41:23.614Z"
    }
  ],
  "sleep": [
    {
      "id": 255,
      "sleep": "8.2",
      "date": "1/6/25",
      "fullDate": "2025-01-06T00:00:00.000Z",
      "sleepStart": "2025-01-06T01:18:00.000Z",
      "sleepEnd": "2025-01-06T09:19:59.000Z",
      "createdAt": "2025-01-07T19:43:29.703Z",
      "updatedAt": "2025-01-07T19:43:29.703Z"
    }
  ],
  "word": [
    {
      "id": 1,
      "word": "clandestine",
      "meaning": "characterized by, done in, or executed with secrecy or concealment, especially for purposes of subversion or deception; private or surreptitious",
      "pronounciation": "klan-des-tin",
      "sentences": "Their clandestine meetings went undiscovered for two years.",
      "createdAt": "2022-01-24T19:45:33.772Z",
      "updatedAt": "2022-01-24T19:45:33.772Z"
    }
  ],
  "quote": [
    {
      "id": 2,
      "quote": "If something upsets you, it is not that thing, but your judgement of it, that causes you distress. And that judgement is in your power",
      "category": "Motivational",
      "author": "Marcus Aurelius",
      "createdAt": "2024-10-21T22:30:21.598Z",
      "updatedAt": "2024-10-21T22:30:21.598Z"
    }
  ],
  "shows": [
    {
      "id": 22,
      "title": "Peep Show Season 9",
      "language": "English",
      "showName": "Peep Show",
      "description": "Mark and Jez are a couple of twenty-something roommates who have nothing in common - except for the fact that their lives are anything but normal. Mayhem ensues as the pair strive to cope with day-to-day life.",
      "seasonNumber": 9,
      "year": 2003,
      "genre": "Comedy",
      "startedDate": "2022-01-31T00:00:00.000Z",
      "completedDate": null,
      "status": "Started",
      "loved": true,
      "imdbRating": "8.6",
      "imdbId": "tt0387764",
      "createdAt": "2022-02-01T01:30:32.275Z",
      "updatedAt": "2022-02-01T01:30:32.275Z"
    }
  ],
  "books": [
    {
      "id": 11,
      "title": "Atomic Habits",
      "author": " James Clear",
      "poster": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1655988385i/40121378.jpg",
      "description": "No matter your goals, Atomic Habits offers a proven framework for improving—every day. James Clear, one of the world's leading experts on habit formation, reveals practical strategies that will teach you exactly how to form good habits, break bad ones, and master the tiny behaviors that lead to remarkable results.",
      "notes": "Atomic Habits",
      "year": 2018,
      "genre": "Personal Development",
      "completedDate": "2023-02-08T00:00:00.000Z",
      "loved": true,
      "createdAt": "2024-10-22T14:53:34.755Z",
      "updatedAt": "2024-10-22T14:53:34.755Z"
    }
  ],
  "courses": [
    {
      "id": 2,
      "title": "MERN Stack Front To Back: Full Stack React, Redux & Node.js",
      "description": "Build and deploy a social network with Node.js, Express, React, Redux & MongoDB",
      "author": "Brad Traversy",
      "category": "React",
      "notes": "NA",
      "completedDate": "2019-01-02T00:00:00.000Z",
      "platform": "Udemy",
      "createdAt": "2022-01-21T03:28:37.957Z",
      "updatedAt": "2022-01-21T03:28:37.957Z"
    }
  ],
  "movies": [
    {
      "id": 166,
      "title": "The Exorcist",
      "description": "When a mysterious entity possesses a young girl, her mother seeks the help of two Catholic priests to save her life.",
      "review": null,
      "language": "English",
      "year": 1973,
      "genre": "Horror",
      "viewingDate": "2024-12-02T04:53:18.239Z",
      "loved": true,
      "imdbRating": "8.1",
      "imdbId": "tt0070047",
      "createdAt": "2024-12-02T14:59:17.397Z",
      "updatedAt": "2024-12-02T14:59:17.397Z"
    }
  ],
  "tasks": [],
  "updates": [
    {
      "id": 11,
      "category": "Life",
      "content": null,
      "title": "Moved to Dublin, Ireland",
      "date": "2021-09-13T10:29:42.297Z",
      "createdAt": "2024-09-15T13:36:36.858Z",
      "updatedAt": "2024-09-15T13:36:36.858Z"
    },
    {
      "id": 10,
      "category": "Life",
      "content": null,
      "title": "Started job at Honeywell, India",
      "date": "2020-10-12T10:29:42.297Z",
      "createdAt": "2024-09-15T13:32:54.840Z",
      "updatedAt": "2024-09-15T13:32:54.840Z"
    },
    {
      "id": 9,
      "category": "Life",
      "content": null,
      "title": "Started job at Amdocs, India",
      "date": "2019-01-19T10:29:42.297Z",
      "createdAt": "2024-09-15T13:28:28.681Z",
      "updatedAt": "2024-09-15T13:33:11.559Z"
    },
    {
      "id": 8,
      "category": "Life",
      "content": null,
      "title": "Started job at Nitor Infotech",
      "date": "2016-06-27T10:29:42.000Z",
      "createdAt": "2024-09-15T13:27:56.348Z",
      "updatedAt": "2024-09-15T13:35:21.819Z"
    },
    {
      "id": 7,
      "category": "Life",
      "content": null,
      "title": "Moved to Pune, India",
      "date": "2016-06-17T10:29:42.000Z",
      "createdAt": "2024-09-15T13:22:04.990Z",
      "updatedAt": "2024-09-15T13:35:34.498Z"
    },
    {
      "id": 6,
      "category": "Life",
      "content": null,
      "title": "Graduated in Computer Science and Engineering from Nagpur University, India",
      "date": "2016-05-30T10:29:42.297Z",
      "createdAt": "2024-09-15T13:21:23.009Z",
      "updatedAt": "2024-09-15T13:32:38.727Z"
    },
    {
      "id": 5,
      "category": "Life",
      "content": null,
      "title": "Born in Chhattisgarh, India",
      "date": "1993-06-04T10:29:42.297Z",
      "createdAt": "2024-09-15T13:19:16.078Z",
      "updatedAt": "2024-09-15T13:19:16.078Z"
    }
  ],
  "listens": [
    {
      "id": 1313,
      "title": "Khaabon Ke Parinday",
      "artist": "Alyssa Mendonsa",
      "album": "Zindagi Na Milegi Dobara",
      "releaseYear": null,
      "genre": null,
      "listenDate": "2025-01-07T19:52:13.000Z",
      "trackNumber": null,
      "createdAt": "2025-01-07T19:52:14.144Z",
      "updatedAt": "2025-01-07T19:52:14.144Z"
    }
  ],
  "github": {
    "lastCommit": "2025-01-08T00:14:18Z",
    "recentRepos": [
      {
        "name": "leetcode-python",
        "pushedAt": "2025-01-08T00:14:19Z"
      },
      {
        "name": "omakub",
        "pushedAt": "2024-12-16T20:11:21Z"
      },
      {
        "name": "books.ashish.me",
        "pushedAt": "2024-12-05T23:03:00Z"
      },
      {
        "name": "shows.ashish.me",
        "pushedAt": "2024-12-05T23:01:49Z"
      },
      {
        "name": "movies.ashish.me",
        "pushedAt": "2024-12-05T23:00:50Z"
      },
      {
        "name": "wiki.ashish.me",
        "pushedAt": "2024-11-20T00:13:30Z"
      },
      {
        "name": "dotfiles",
        "pushedAt": "2024-11-19T23:35:30Z"
      },
      {
        "name": "cli",
        "pushedAt": "2024-11-11T22:05:56Z"
      },
      {
        "name": "blog",
        "pushedAt": "2024-11-11T15:34:12Z"
      },
      {
        "name": "workers",
        "pushedAt": "2024-11-10T10:49:26Z"
      },
      {
        "name": "ashishdotme-utils",
        "pushedAt": "2024-11-09T00:31:07Z"
      },
      {
        "name": "npm-library-starter",
        "pushedAt": "2024-11-08T23:32:13Z"
      },
      {
        "name": "task-tracker",
        "pushedAt": "2024-11-08T23:08:27Z"
      },
      {
        "name": "jobsapi.ashish.me",
        "pushedAt": "2024-11-05T23:21:30Z"
      },
      {
        "name": "dashy",
        "pushedAt": "2024-10-16T17:47:56Z"
      },
      {
        "name": "dashboard.ashish.me",
        "pushedAt": "2024-09-14T17:51:29Z"
      }
    ]
  },
  "lastLeetcode": {
    "path": "Array_Easy_1662-check-if-two-string-arrays-are-equivalent_solution.py",
    "title": "solution.py",
    "body": "```python  \n# Created by Ashish Patel at 2025/01/07 23:59\n# leetgo: 1.4.13\n# https://leetcode.com/problems/check-if-two-string-arrays-are-equivalent/\n\n\"\"\"\n1662. Check If Two String Arrays are Equivalent (Easy)\nGiven two string arrays word1 and word2, return true if the two arrays **represent** the same\nstring, and  false otherwise.\n\nA string is **represented** by an array if the array elements concatenated **in order** forms the\nstring.\n\n**Example 1:**\n\n\nInput: word1 = [\"ab\", \"c\"], word2 = [\"a\", \"bc\"]\nOutput: true\nExplanation:\nword1 represents string \"ab\" + \"c\" -> \"abc\"\nword2 represents string \"a\" + \"bc\" -> \"abc\"\nThe strings are the same, so return true.\n\n\n**Example 2:**\n\n\nInput: word1 = [\"a\", \"cb\"], word2 = [\"ab\", \"c\"]\nOutput: false\n\n\n**Example 3:**\n\n\nInput: word1  = [\"abc\", \"d\", \"defg\"], word2 = [\"abcddefg\"]\nOutput: true\n\n\n**Constraints:**\n\n- 1 <= word1.length, word2.length <= 10³\n- 1 <= word1[i].length, word2[i].length <= 10³\n- 1 <= sum(word1[i].length), sum(word2[i].length) <= 10³\n- word1[i] and word2[i] consist of lowercase letters.\n\n\"\"\"\n\nfrom typing import *\nfrom leetgo_py import *\n\nimport bisect\nimport collections \nimport functools\nimport heapq \nimport itertools \nimport operator\nimport math \nimport string\n\n# @lc code=begin\n\nclass Solution:\n    def arrayStringsAreEqual(self, word1: List[str], word2: List[str]) -> bool:\n        return \"\".join(word1) == \"\".join(word2)\n\n# @lc code=end\n\nif __name__ == \"__main__\":\n    word1 = [\"ab\", \"c\"]\n    word2 = [\"a\", \"bc\"]\n    ans = Solution().arrayStringsAreEqual(word1, word2)\n    print(\"\\noutput:\", serialize(ans, \"boolean\"))\n```",
    "topic1": "Array",
    "topic2": "Easy",
    "topic3": "1662-check-if-two-string-arrays-are-equivalent",
    "url": "https://github.com/ashishdotme/leetcode-python/blob/master/Array/Easy/1662-check-if-two-string-arrays-are-equivalent/solution.py",
    "slug": "solution",
    "html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"># Created by Ashish Patel at 2025/01/07 23:59</span>\n<span class=\"pl-c\"># leetgo: 1.4.13</span>\n<span class=\"pl-c\"># https://leetcode.com/problems/check-if-two-string-arrays-are-equivalent/</span>\n\n<span class=\"pl-s\">\"\"\"</span>\n<span class=\"pl-s\">1662. Check If Two String Arrays are Equivalent (Easy)</span>\n<span class=\"pl-s\">Given two string arrays word1 and word2, return true if the two arrays **represent** the same</span>\n<span class=\"pl-s\">string, and  false otherwise.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">A string is **represented** by an array if the array elements concatenated **in order** forms the</span>\n<span class=\"pl-s\">string.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 1:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: word1 = [\"ab\", \"c\"], word2 = [\"a\", \"bc\"]</span>\n<span class=\"pl-s\">Output: true</span>\n<span class=\"pl-s\">Explanation:</span>\n<span class=\"pl-s\">word1 represents string \"ab\" + \"c\" -&gt; \"abc\"</span>\n<span class=\"pl-s\">word2 represents string \"a\" + \"bc\" -&gt; \"abc\"</span>\n<span class=\"pl-s\">The strings are the same, so return true.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 2:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: word1 = [\"a\", \"cb\"], word2 = [\"ab\", \"c\"]</span>\n<span class=\"pl-s\">Output: false</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 3:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: word1  = [\"abc\", \"d\", \"defg\"], word2 = [\"abcddefg\"]</span>\n<span class=\"pl-s\">Output: true</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Constraints:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">- 1 &lt;= word1.length, word2.length &lt;= 10³</span>\n<span class=\"pl-s\">- 1 &lt;= word1[i].length, word2[i].length &lt;= 10³</span>\n<span class=\"pl-s\">- 1 &lt;= sum(word1[i].length), sum(word2[i].length) &lt;= 10³</span>\n<span class=\"pl-s\">- word1[i] and word2[i] consist of lowercase letters.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">\"\"\"</span>\n\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">typing</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">leetgo_py</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">bisect</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">collections</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">functools</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">heapq</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">itertools</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">operator</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">math</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">string</span>\n\n<span class=\"pl-c\"># @lc code=begin</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">Solution</span>:\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">arrayStringsAreEqual</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">word1</span>: <span class=\"pl-v\">List</span>[<span class=\"pl-smi\">str</span>], <span class=\"pl-s1\">word2</span>: <span class=\"pl-v\">List</span>[<span class=\"pl-smi\">str</span>]) <span class=\"pl-c1\">-&gt;</span> <span class=\"pl-smi\">bool</span>:\n        <span class=\"pl-k\">return</span> <span class=\"pl-s\">\"\"</span>.<span class=\"pl-c1\">join</span>(<span class=\"pl-s1\">word1</span>) <span class=\"pl-c1\">==</span> <span class=\"pl-s\">\"\"</span>.<span class=\"pl-c1\">join</span>(<span class=\"pl-s1\">word2</span>)\n\n<span class=\"pl-c\"># @lc code=end</span>\n\n<span class=\"pl-k\">if</span> <span class=\"pl-s1\">__name__</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s\">\"__main__\"</span>:\n    <span class=\"pl-s1\">word1</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">\"ab\"</span>, <span class=\"pl-s\">\"c\"</span>]\n    <span class=\"pl-s1\">word2</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">\"a\"</span>, <span class=\"pl-s\">\"bc\"</span>]\n    <span class=\"pl-s1\">ans</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">Solution</span>().<span class=\"pl-c1\">arrayStringsAreEqual</span>(<span class=\"pl-s1\">word1</span>, <span class=\"pl-s1\">word2</span>)\n    <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"<span class=\"pl-cce\">\\n</span>output:\"</span>, <span class=\"pl-en\">serialize</span>(<span class=\"pl-s1\">ans</span>, <span class=\"pl-s\">\"boolean\"</span>))</pre></div>\n",
    "created": "2025-01-08T00:13:55+00:00",
    "created_utc": "2025-01-08T00:13:55+00:00",
    "updated": "2025-01-08T00:13:55+00:00",
    "updated_utc": "2025-01-08T00:13:55+00:00"
  }
}
