{
  "locations": [
    {
      "id": 6159,
      "batteryState": "unplugged",
      "coordinates": "{\"-6.2262155\",\"53.2630179\"}",
      "batteryLevel": 60,
      "timestamp": "2025-01-08T23:11:23.000Z",
      "createdAt": "2025-01-08T23:11:24.461Z",
      "updatedAt": "2025-01-08T23:11:24.461Z"
    }
  ],
  "steps": [
    {
      "id": 8942,
      "stepCount": 6210,
      "date": "1/7/25",
      "fullDate": "2025-01-07T00:00:00.000Z",
      "createdAt": "2025-01-08T13:34:37.301Z",
      "updatedAt": "2025-01-08T13:34:37.301Z"
    }
  ],
  "sleep": [
    {
      "id": 255,
      "sleep": "8.2",
      "date": "1/6/25",
      "fullDate": "2025-01-06T00:00:00.000Z",
      "sleepStart": "2025-01-06T01:18:00.000Z",
      "sleepEnd": "2025-01-06T09:19:59.000Z",
      "createdAt": "2025-01-07T19:43:29.703Z",
      "updatedAt": "2025-01-07T19:43:29.703Z"
    }
  ],
  "word": [
    {
      "id": 1,
      "word": "clandestine",
      "meaning": "characterized by, done in, or executed with secrecy or concealment, especially for purposes of subversion or deception; private or surreptitious",
      "pronounciation": "klan-des-tin",
      "sentences": "Their clandestine meetings went undiscovered for two years.",
      "createdAt": "2022-01-24T19:45:33.772Z",
      "updatedAt": "2022-01-24T19:45:33.772Z"
    }
  ],
  "quote": [
    {
      "id": 2,
      "quote": "If something upsets you, it is not that thing, but your judgement of it, that causes you distress. And that judgement is in your power",
      "category": "Motivational",
      "author": "Marcus Aurelius",
      "createdAt": "2024-10-21T22:30:21.598Z",
      "updatedAt": "2024-10-21T22:30:21.598Z"
    }
  ],
  "shows": [
    {
      "id": 22,
      "title": "Peep Show Season 9",
      "language": "English",
      "showName": "Peep Show",
      "description": "Mark and Jez are a couple of twenty-something roommates who have nothing in common - except for the fact that their lives are anything but normal. Mayhem ensues as the pair strive to cope with day-to-day life.",
      "seasonNumber": 9,
      "year": 2003,
      "genre": "Comedy",
      "startedDate": "2022-01-31T00:00:00.000Z",
      "completedDate": null,
      "status": "Started",
      "loved": true,
      "imdbRating": "8.6",
      "imdbId": "tt0387764",
      "createdAt": "2022-02-01T01:30:32.275Z",
      "updatedAt": "2022-02-01T01:30:32.275Z"
    }
  ],
  "books": [
    {
      "id": 11,
      "title": "Atomic Habits",
      "author": " James Clear",
      "poster": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1655988385i/40121378.jpg",
      "description": "No matter your goals, Atomic Habits offers a proven framework for improvingâ€”every day. James Clear, one of the world's leading experts on habit formation, reveals practical strategies that will teach you exactly how to form good habits, break bad ones, and master the tiny behaviors that lead to remarkable results.",
      "notes": "Atomic Habits",
      "year": 2018,
      "genre": "Personal Development",
      "completedDate": "2023-02-08T00:00:00.000Z",
      "loved": true,
      "createdAt": "2024-10-22T14:53:34.755Z",
      "updatedAt": "2024-10-22T14:53:34.755Z"
    }
  ],
  "courses": [
    {
      "id": 2,
      "title": "MERN Stack Front To Back: Full Stack React, Redux & Node.js",
      "description": "Build and deploy a social network with Node.js, Express, React, Redux & MongoDB",
      "author": "Brad Traversy",
      "category": "React",
      "notes": "NA",
      "completedDate": "2019-01-02T00:00:00.000Z",
      "platform": "Udemy",
      "createdAt": "2022-01-21T03:28:37.957Z",
      "updatedAt": "2022-01-21T03:28:37.957Z"
    }
  ],
  "movies": [
    {
      "id": 166,
      "title": "The Exorcist",
      "description": "When a mysterious entity possesses a young girl, her mother seeks the help of two Catholic priests to save her life.",
      "review": null,
      "language": "English",
      "year": 1973,
      "genre": "Horror",
      "viewingDate": "2024-12-02T04:53:18.239Z",
      "loved": true,
      "imdbRating": "8.1",
      "imdbId": "tt0070047",
      "createdAt": "2024-12-02T14:59:17.397Z",
      "updatedAt": "2024-12-02T14:59:17.397Z"
    }
  ],
  "tasks": [],
  "updates": [
    {
      "id": 11,
      "category": "Life",
      "content": null,
      "title": "Moved to Dublin, Ireland",
      "date": "2021-09-13T10:29:42.297Z",
      "createdAt": "2024-09-15T13:36:36.858Z",
      "updatedAt": "2024-09-15T13:36:36.858Z"
    },
    {
      "id": 10,
      "category": "Life",
      "content": null,
      "title": "Started job at Honeywell, India",
      "date": "2020-10-12T10:29:42.297Z",
      "createdAt": "2024-09-15T13:32:54.840Z",
      "updatedAt": "2024-09-15T13:32:54.840Z"
    },
    {
      "id": 9,
      "category": "Life",
      "content": null,
      "title": "Started job at Amdocs, India",
      "date": "2019-01-19T10:29:42.297Z",
      "createdAt": "2024-09-15T13:28:28.681Z",
      "updatedAt": "2024-09-15T13:33:11.559Z"
    },
    {
      "id": 8,
      "category": "Life",
      "content": null,
      "title": "Started job at Nitor Infotech",
      "date": "2016-06-27T10:29:42.000Z",
      "createdAt": "2024-09-15T13:27:56.348Z",
      "updatedAt": "2024-09-15T13:35:21.819Z"
    },
    {
      "id": 7,
      "category": "Life",
      "content": null,
      "title": "Moved to Pune, India",
      "date": "2016-06-17T10:29:42.000Z",
      "createdAt": "2024-09-15T13:22:04.990Z",
      "updatedAt": "2024-09-15T13:35:34.498Z"
    },
    {
      "id": 6,
      "category": "Life",
      "content": null,
      "title": "Graduated in Computer Science and Engineering from Nagpur University, India",
      "date": "2016-05-30T10:29:42.297Z",
      "createdAt": "2024-09-15T13:21:23.009Z",
      "updatedAt": "2024-09-15T13:32:38.727Z"
    },
    {
      "id": 5,
      "category": "Life",
      "content": null,
      "title": "Born in Chhattisgarh, India",
      "date": "1993-06-04T10:29:42.297Z",
      "createdAt": "2024-09-15T13:19:16.078Z",
      "updatedAt": "2024-09-15T13:19:16.078Z"
    }
  ],
  "listens": [
    {
      "id": 1315,
      "title": "Bin Tere",
      "artist": "Vishal-Shekhar",
      "album": "I Hate Luv Storys (Original Motion Picture Soundtrack)",
      "releaseYear": null,
      "genre": null,
      "listenDate": "2025-01-08T10:47:15.000Z",
      "trackNumber": null,
      "createdAt": "2025-01-08T10:47:16.253Z",
      "updatedAt": "2025-01-08T10:47:16.253Z"
    }
  ],
  "github": {
    "lastCommit": "2025-01-08T21:49:02Z",
    "recentRepos": [
      {
        "name": "leetcode-python",
        "pushedAt": "2025-01-08T21:49:03Z"
      },
      {
        "name": "omakub",
        "pushedAt": "2024-12-16T20:11:21Z"
      },
      {
        "name": "books.ashish.me",
        "pushedAt": "2024-12-05T23:03:00Z"
      },
      {
        "name": "shows.ashish.me",
        "pushedAt": "2024-12-05T23:01:49Z"
      },
      {
        "name": "movies.ashish.me",
        "pushedAt": "2024-12-05T23:00:50Z"
      },
      {
        "name": "wiki.ashish.me",
        "pushedAt": "2024-11-20T00:13:30Z"
      },
      {
        "name": "dotfiles",
        "pushedAt": "2024-11-19T23:35:30Z"
      },
      {
        "name": "cli",
        "pushedAt": "2024-11-11T22:05:56Z"
      },
      {
        "name": "blog",
        "pushedAt": "2024-11-11T15:34:12Z"
      },
      {
        "name": "workers",
        "pushedAt": "2024-11-10T10:49:26Z"
      },
      {
        "name": "ashishdotme-utils",
        "pushedAt": "2024-11-09T00:31:07Z"
      },
      {
        "name": "npm-library-starter",
        "pushedAt": "2024-11-08T23:32:13Z"
      },
      {
        "name": "task-tracker",
        "pushedAt": "2024-11-08T23:08:27Z"
      },
      {
        "name": "jobsapi.ashish.me",
        "pushedAt": "2024-11-05T23:21:30Z"
      },
      {
        "name": "dashy",
        "pushedAt": "2024-10-16T17:47:56Z"
      },
      {
        "name": "dashboard.ashish.me",
        "pushedAt": "2024-09-14T17:51:29Z"
      }
    ]
  },
  "lastLeetcode": {
    "path": "Array_Easy_2748-number-of-beautiful-pairs_solution.py",
    "title": "solution.py",
    "body": "```python  \n# Created by Ashish Patel at 2025/01/08 16:55\n# leetgo: 1.4.11\n# https://leetcode.com/problems/number-of-beautiful-pairs/\n\n\"\"\"\n2748. Number of Beautiful Pairs (Easy)\nYou are given a **0-indexed** integer array nums. A pair of indices i, j where 0 <= i < j <\nnums.length is called beautiful if the **first digit** of nums[i] and the **last digit** of\nnums[j] are **coprime**.\n\nReturn the total number of beautiful pairs in  nums.\n\nTwo integers x and y are **coprime** if there is no integer greater than 1 that divides both of\nthem. In other words, x and y are coprime if gcd(x, y) == 1, where gcd(x, y) is the\n**greatest common divisor** of x and y.\n\n**Example 1:**\n\n\nInput: nums = [2,5,1,4]\nOutput: 5\nExplanation: There are 5 beautiful pairs in nums:\nWhen i = 0 and j = 1: the first digit of nums[0] is 2, and the last digit of nums[1] is 5. We can\nconfirm that 2 and 5 are coprime, since gcd(2,5) == 1.\nWhen i = 0 and j = 2: the first digit of nums[0] is 2, and the last digit of nums[2] is 1. Indeed,\ngcd(2,1) == 1.\nWhen i = 1 and j = 2: the first digit of nums[1] is 5, and the last digit of nums[2] is 1. Indeed,\ngcd(5,1) == 1.\nWhen i = 1 and j = 3: the first digit of nums[1] is 5, and the last digit of nums[3] is 4. Indeed,\ngcd(5,4) == 1.\nWhen i = 2 and j = 3: the first digit of nums[2] is 1, and the last digit of nums[3] is 4. Indeed,\ngcd(1,4) == 1.\nThus, we return 5.\n\n\n**Example 2:**\n\n\nInput: nums = [11,21,12]\nOutput: 2\nExplanation: There are 2 beautiful pairs:\nWhen i = 0 and j = 1: the first digit of nums[0] is 1, and the last digit of nums[1] is 1. Indeed,\ngcd(1,1) == 1.\nWhen i = 0 and j = 2: the first digit of nums[0] is 1, and the last digit of nums[2] is 2. Indeed,\ngcd(1,2) == 1.\nThus, we return 2.\n\n\n**Constraints:**\n\n- 2 <= nums.length <= 100\n- 1 <= nums[i] <= 9999\n- nums[i] % 10 != 0\n\n\"\"\"\n\nfrom typing import *\nfrom leetgo_py import *\n\nimport bisect\nimport collections \nimport functools\nimport heapq \nimport itertools \nimport operator\nimport math \nimport string\nimport leetcode as lc\n\n# @lc code=begin\n\nclass Solution:\n    def countBeautifulPairs(self, nums: List[int]) -> int:\n        result = 0\n        for i in range(len(nums)):\n            for j in range(i+1, len(nums)):\n                first, second = str(nums[i]), str(nums[j])\n                if math.gcd(int(first[0]), int(second[-1])) == 1:\n                    result +=1\n        return result\n                    \n            \n\n# @lc code=end\n\nif __name__ == \"__main__\":\n    nums = [2,5,1,4]\n    ans = Solution().countBeautifulPairs(nums)\n    print(\"\\noutput:\", serialize(ans, \"integer\"))\n```",
    "topic1": "Array",
    "topic2": "Easy",
    "topic3": "2748-number-of-beautiful-pairs",
    "url": "https://github.com/ashishdotme/leetcode-python/blob/master/Array/Easy/2748-number-of-beautiful-pairs/solution.py",
    "slug": "solution",
    "html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"># Created by Ashish Patel at 2025/01/08 16:55</span>\n<span class=\"pl-c\"># leetgo: 1.4.11</span>\n<span class=\"pl-c\"># https://leetcode.com/problems/number-of-beautiful-pairs/</span>\n\n<span class=\"pl-s\">\"\"\"</span>\n<span class=\"pl-s\">2748. Number of Beautiful Pairs (Easy)</span>\n<span class=\"pl-s\">You are given a **0-indexed** integer array nums. A pair of indices i, j where 0 &lt;= i &lt; j &lt;</span>\n<span class=\"pl-s\">nums.length is called beautiful if the **first digit** of nums[i] and the **last digit** of</span>\n<span class=\"pl-s\">nums[j] are **coprime**.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Return the total number of beautiful pairs in  nums.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Two integers x and y are **coprime** if there is no integer greater than 1 that divides both of</span>\n<span class=\"pl-s\">them. In other words, x and y are coprime if gcd(x, y) == 1, where gcd(x, y) is the</span>\n<span class=\"pl-s\">**greatest common divisor** of x and y.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 1:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: nums = [2,5,1,4]</span>\n<span class=\"pl-s\">Output: 5</span>\n<span class=\"pl-s\">Explanation: There are 5 beautiful pairs in nums:</span>\n<span class=\"pl-s\">When i = 0 and j = 1: the first digit of nums[0] is 2, and the last digit of nums[1] is 5. We can</span>\n<span class=\"pl-s\">confirm that 2 and 5 are coprime, since gcd(2,5) == 1.</span>\n<span class=\"pl-s\">When i = 0 and j = 2: the first digit of nums[0] is 2, and the last digit of nums[2] is 1. Indeed,</span>\n<span class=\"pl-s\">gcd(2,1) == 1.</span>\n<span class=\"pl-s\">When i = 1 and j = 2: the first digit of nums[1] is 5, and the last digit of nums[2] is 1. Indeed,</span>\n<span class=\"pl-s\">gcd(5,1) == 1.</span>\n<span class=\"pl-s\">When i = 1 and j = 3: the first digit of nums[1] is 5, and the last digit of nums[3] is 4. Indeed,</span>\n<span class=\"pl-s\">gcd(5,4) == 1.</span>\n<span class=\"pl-s\">When i = 2 and j = 3: the first digit of nums[2] is 1, and the last digit of nums[3] is 4. Indeed,</span>\n<span class=\"pl-s\">gcd(1,4) == 1.</span>\n<span class=\"pl-s\">Thus, we return 5.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 2:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: nums = [11,21,12]</span>\n<span class=\"pl-s\">Output: 2</span>\n<span class=\"pl-s\">Explanation: There are 2 beautiful pairs:</span>\n<span class=\"pl-s\">When i = 0 and j = 1: the first digit of nums[0] is 1, and the last digit of nums[1] is 1. Indeed,</span>\n<span class=\"pl-s\">gcd(1,1) == 1.</span>\n<span class=\"pl-s\">When i = 0 and j = 2: the first digit of nums[0] is 1, and the last digit of nums[2] is 2. Indeed,</span>\n<span class=\"pl-s\">gcd(1,2) == 1.</span>\n<span class=\"pl-s\">Thus, we return 2.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Constraints:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">- 2 &lt;= nums.length &lt;= 100</span>\n<span class=\"pl-s\">- 1 &lt;= nums[i] &lt;= 9999</span>\n<span class=\"pl-s\">- nums[i] % 10 != 0</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">\"\"\"</span>\n\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">typing</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">leetgo_py</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">bisect</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">collections</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">functools</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">heapq</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">itertools</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">operator</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">math</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">string</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">leetcode</span> <span class=\"pl-k\">as</span> <span class=\"pl-s1\">lc</span>\n\n<span class=\"pl-c\"># @lc code=begin</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">Solution</span>:\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">countBeautifulPairs</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">nums</span>: <span class=\"pl-v\">List</span>[<span class=\"pl-smi\">int</span>]) <span class=\"pl-c1\">-&gt;</span> <span class=\"pl-smi\">int</span>:\n        <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span>\n        <span class=\"pl-k\">for</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">in</span> <span class=\"pl-en\">range</span>(<span class=\"pl-en\">len</span>(<span class=\"pl-s1\">nums</span>)):\n            <span class=\"pl-k\">for</span> <span class=\"pl-s1\">j</span> <span class=\"pl-c1\">in</span> <span class=\"pl-en\">range</span>(<span class=\"pl-s1\">i</span><span class=\"pl-c1\">+</span><span class=\"pl-c1\">1</span>, <span class=\"pl-en\">len</span>(<span class=\"pl-s1\">nums</span>)):\n                <span class=\"pl-s1\">first</span>, <span class=\"pl-s1\">second</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">str</span>(<span class=\"pl-s1\">nums</span>[<span class=\"pl-s1\">i</span>]), <span class=\"pl-en\">str</span>(<span class=\"pl-s1\">nums</span>[<span class=\"pl-s1\">j</span>])\n                <span class=\"pl-k\">if</span> <span class=\"pl-s1\">math</span>.<span class=\"pl-c1\">gcd</span>(<span class=\"pl-en\">int</span>(<span class=\"pl-s1\">first</span>[<span class=\"pl-c1\">0</span>]), <span class=\"pl-en\">int</span>(<span class=\"pl-s1\">second</span>[<span class=\"pl-c1\">-</span><span class=\"pl-c1\">1</span>])) <span class=\"pl-c1\">==</span> <span class=\"pl-c1\">1</span>:\n                    <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">+=</span><span class=\"pl-c1\">1</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">result</span>\n                    \n            \n\n<span class=\"pl-c\"># @lc code=end</span>\n\n<span class=\"pl-k\">if</span> <span class=\"pl-s1\">__name__</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s\">\"__main__\"</span>:\n    <span class=\"pl-s1\">nums</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">4</span>]\n    <span class=\"pl-s1\">ans</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">Solution</span>().<span class=\"pl-c1\">countBeautifulPairs</span>(<span class=\"pl-s1\">nums</span>)\n    <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"<span class=\"pl-cce\">\\n</span>output:\"</span>, <span class=\"pl-en\">serialize</span>(<span class=\"pl-s1\">ans</span>, <span class=\"pl-s\">\"integer\"</span>))</pre></div>\n",
    "created": "2025-01-08T18:22:25+00:00",
    "created_utc": "2025-01-08T18:22:25+00:00",
    "updated": "2025-01-08T18:22:25+00:00",
    "updated_utc": "2025-01-08T18:22:25+00:00"
  }
}
