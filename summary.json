{
  "locations": [
    {
      "id": 6450,
      "batteryState": "charging",
      "coordinates": "{\"-6.2262223\",\"53.2630271\"}",
      "batteryLevel": 25,
      "timestamp": "2025-01-12T14:01:16.000Z",
      "createdAt": "2025-01-12T14:01:17.105Z",
      "updatedAt": "2025-01-12T14:01:17.105Z"
    }
  ],
  "steps": [
    {
      "id": 9016,
      "stepCount": 449,
      "date": "1/15/25",
      "fullDate": "2025-01-15T00:00:00.000Z",
      "createdAt": "2025-01-16T00:45:16.028Z",
      "updatedAt": "2025-01-16T00:45:16.028Z"
    }
  ],
  "sleep": [
    {
      "id": 255,
      "sleep": "8.2",
      "date": "1/6/25",
      "fullDate": "2025-01-06T00:00:00.000Z",
      "sleepStart": "2025-01-06T01:18:00.000Z",
      "sleepEnd": "2025-01-06T09:19:59.000Z",
      "createdAt": "2025-01-07T19:43:29.703Z",
      "updatedAt": "2025-01-07T19:43:29.703Z"
    }
  ],
  "word": [
    {
      "id": 1,
      "word": "clandestine",
      "meaning": "characterized by, done in, or executed with secrecy or concealment, especially for purposes of subversion or deception; private or surreptitious",
      "pronounciation": "klan-des-tin",
      "sentences": "Their clandestine meetings went undiscovered for two years.",
      "createdAt": "2022-01-24T19:45:33.772Z",
      "updatedAt": "2022-01-24T19:45:33.772Z"
    }
  ],
  "quote": [
    {
      "id": 1,
      "quote": "Kindness is the language which the deaf can hear and the blind can see",
      "category": "Motivational",
      "author": "Mark Twain",
      "createdAt": "2024-10-21T22:28:52.934Z",
      "updatedAt": "2024-10-21T22:28:52.934Z"
    }
  ],
  "shows": [
    {
      "id": 22,
      "title": "Peep Show Season 9",
      "language": "English",
      "showName": "Peep Show",
      "description": "Mark and Jez are a couple of twenty-something roommates who have nothing in common - except for the fact that their lives are anything but normal. Mayhem ensues as the pair strive to cope with day-to-day life.",
      "seasonNumber": 9,
      "year": 2003,
      "genre": "Comedy",
      "startedDate": "2022-01-31T00:00:00.000Z",
      "completedDate": null,
      "status": "Started",
      "loved": true,
      "imdbRating": "8.6",
      "imdbId": "tt0387764",
      "createdAt": "2022-02-01T01:30:32.275Z",
      "updatedAt": "2022-02-01T01:30:32.275Z"
    }
  ],
  "books": [
    {
      "id": 11,
      "title": "Atomic Habits",
      "author": " James Clear",
      "poster": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1655988385i/40121378.jpg",
      "description": "No matter your goals, Atomic Habits offers a proven framework for improving—every day. James Clear, one of the world's leading experts on habit formation, reveals practical strategies that will teach you exactly how to form good habits, break bad ones, and master the tiny behaviors that lead to remarkable results.",
      "notes": "Atomic Habits",
      "year": 2018,
      "genre": "Personal Development",
      "completedDate": "2023-02-08T00:00:00.000Z",
      "loved": true,
      "createdAt": "2024-10-22T14:53:34.755Z",
      "updatedAt": "2024-10-22T14:53:34.755Z"
    }
  ],
  "courses": [
    {
      "id": 2,
      "title": "MERN Stack Front To Back: Full Stack React, Redux & Node.js",
      "description": "Build and deploy a social network with Node.js, Express, React, Redux & MongoDB",
      "author": "Brad Traversy",
      "category": "React",
      "notes": "NA",
      "completedDate": "2019-01-02T00:00:00.000Z",
      "platform": "Udemy",
      "createdAt": "2022-01-21T03:28:37.957Z",
      "updatedAt": "2022-01-21T03:28:37.957Z"
    }
  ],
  "movies": [
    {
      "id": 166,
      "title": "The Exorcist",
      "description": "When a mysterious entity possesses a young girl, her mother seeks the help of two Catholic priests to save her life.",
      "review": null,
      "language": "English",
      "year": 1973,
      "genre": "Horror",
      "viewingDate": "2024-12-02T04:53:18.239Z",
      "loved": true,
      "imdbRating": "8.1",
      "imdbId": "tt0070047",
      "createdAt": "2024-12-02T14:59:17.397Z",
      "updatedAt": "2024-12-02T14:59:17.397Z"
    }
  ],
  "tasks": [],
  "updates": [
    {
      "id": 11,
      "category": "Life",
      "content": null,
      "title": "Moved to Dublin, Ireland",
      "date": "2021-09-13T10:29:42.297Z",
      "createdAt": "2024-09-15T13:36:36.858Z",
      "updatedAt": "2024-09-15T13:36:36.858Z"
    },
    {
      "id": 10,
      "category": "Life",
      "content": null,
      "title": "Started job at Honeywell, India",
      "date": "2020-10-12T10:29:42.297Z",
      "createdAt": "2024-09-15T13:32:54.840Z",
      "updatedAt": "2024-09-15T13:32:54.840Z"
    },
    {
      "id": 9,
      "category": "Life",
      "content": null,
      "title": "Started job at Amdocs, India",
      "date": "2019-01-19T10:29:42.297Z",
      "createdAt": "2024-09-15T13:28:28.681Z",
      "updatedAt": "2024-09-15T13:33:11.559Z"
    },
    {
      "id": 8,
      "category": "Life",
      "content": null,
      "title": "Started job at Nitor Infotech",
      "date": "2016-06-27T10:29:42.000Z",
      "createdAt": "2024-09-15T13:27:56.348Z",
      "updatedAt": "2024-09-15T13:35:21.819Z"
    },
    {
      "id": 7,
      "category": "Life",
      "content": null,
      "title": "Moved to Pune, India",
      "date": "2016-06-17T10:29:42.000Z",
      "createdAt": "2024-09-15T13:22:04.990Z",
      "updatedAt": "2024-09-15T13:35:34.498Z"
    },
    {
      "id": 6,
      "category": "Life",
      "content": null,
      "title": "Graduated in Computer Science and Engineering from Nagpur University, India",
      "date": "2016-05-30T10:29:42.297Z",
      "createdAt": "2024-09-15T13:21:23.009Z",
      "updatedAt": "2024-09-15T13:32:38.727Z"
    },
    {
      "id": 5,
      "category": "Life",
      "content": null,
      "title": "Born in Chhattisgarh, India",
      "date": "1993-06-04T10:29:42.297Z",
      "createdAt": "2024-09-15T13:19:16.078Z",
      "updatedAt": "2024-09-15T13:19:16.078Z"
    }
  ],
  "listens": [
    {
      "id": 1319,
      "title": "Chhu Kar Mere Manko - From \"Yaarana\"",
      "artist": "Kishore Kumar",
      "album": "Yaarana (Original Motion Picture Soundtrack)",
      "releaseYear": null,
      "genre": null,
      "listenDate": "2025-01-16T11:02:32.000Z",
      "trackNumber": null,
      "createdAt": "2025-01-16T11:02:34.526Z",
      "updatedAt": "2025-01-16T11:02:34.526Z"
    }
  ],
  "github": {
    "lastCommit": "2025-01-16T23:46:18Z",
    "recentRepos": [
      {
        "name": "leetcode-python",
        "pushedAt": "2025-01-16T23:46:19Z"
      },
      {
        "name": "omakub",
        "pushedAt": "2024-12-16T20:11:21Z"
      },
      {
        "name": "books.ashish.me",
        "pushedAt": "2024-12-05T23:03:00Z"
      },
      {
        "name": "shows.ashish.me",
        "pushedAt": "2024-12-05T23:01:49Z"
      },
      {
        "name": "movies.ashish.me",
        "pushedAt": "2024-12-05T23:00:50Z"
      },
      {
        "name": "wiki.ashish.me",
        "pushedAt": "2024-11-20T00:13:30Z"
      },
      {
        "name": "dotfiles",
        "pushedAt": "2024-11-19T23:35:30Z"
      },
      {
        "name": "cli",
        "pushedAt": "2024-11-11T22:05:56Z"
      },
      {
        "name": "blog",
        "pushedAt": "2024-11-11T15:34:12Z"
      },
      {
        "name": "workers",
        "pushedAt": "2024-11-10T10:49:26Z"
      },
      {
        "name": "ashishdotme-utils",
        "pushedAt": "2024-11-09T00:31:07Z"
      },
      {
        "name": "npm-library-starter",
        "pushedAt": "2024-11-08T23:32:13Z"
      },
      {
        "name": "task-tracker",
        "pushedAt": "2024-11-08T23:08:27Z"
      },
      {
        "name": "jobsapi.ashish.me",
        "pushedAt": "2024-11-05T23:21:30Z"
      },
      {
        "name": "dashy",
        "pushedAt": "2024-10-16T17:47:56Z"
      },
      {
        "name": "dashboard.ashish.me",
        "pushedAt": "2024-09-14T17:51:29Z"
      }
    ]
  },
  "lastLeetcode": {
    "path": "Array_Easy_2639-find-the-width-of-columns-of-a-grid_solution.py",
    "title": "solution.py",
    "body": "```python  \n# Created by Ashish Patel at 2025/01/16 18:47\n# leetgo: 1.4.13\n# https://leetcode.com/problems/find-the-width-of-columns-of-a-grid/\n\n\"\"\"\n2639. Find the Width of Columns of a Grid (Easy)\nYou are given a **0-indexed** m x n integer matrix grid. The width of a column is the maximum\n**length** of its integers.\n\n- For example, if grid = [[-10], [3], [12]], the width of the only column is 3 since -10 is of\nlength 3.\n\nReturn an integer array ansof size nwhere ans[i]is the width of the iᵗʰcolumn.\n\nThe **length** of an integer x with len digits is equal to len if x is non-negative, and len\n+ 1 otherwise.\n\n**Example 1:**\n\n\nInput: grid = [[1],[22],[333]]\nOutput: [3]\nExplanation: In the 0ᵗʰ column, 333 is of length 3.\n\n\n**Example 2:**\n\n\nInput: grid = [[-15,1,3],[15,7,12],[5,6,-2]]\nOutput: [3,1,2]\nExplanation:\nIn the 0ᵗʰ column, only -15 is of length 3.\nIn the 1ˢᵗ column, all integers are of length 1.\nIn the 2ⁿᵈ column, both 12 and -2 are of length 2.\n\n\n**Constraints:**\n\n- m == grid.length\n- n == grid[i].length\n- 1 <= m, n <= 100 \n- -10⁹ <= grid[r][c] <= 10⁹\n\n\"\"\"\n\nfrom typing import *\nfrom leetgo_py import *\n\nimport bisect\nimport collections \nimport functools\nimport heapq \nimport itertools \nimport operator\nimport math \nimport string\nimport numpy as np\n\n# @lc code=begin\n\nclass Solution:\n    def findColumnWidth(self, grid: List[List[int]]) -> List[int]:\n        cols = []\n        for col in range(len(grid[0])):\n            cols.append([len(str(row[col])) for row in grid])\n        \n        result = []\n        for col in cols:\n            result.append(max(col))\n        \n        return result\n# @lc code=end\n\nif __name__ == \"__main__\":\n    grid = [[-15,1,3],[15,7,12],[5,6,-2]]\n    ans = Solution().findColumnWidth(grid)\n    print(\"\\noutput:\", serialize(ans, \"integer[]\"))\n```",
    "topic1": "Array",
    "topic2": "Easy",
    "topic3": "2639-find-the-width-of-columns-of-a-grid",
    "url": "https://github.com/ashishdotme/leetcode-python/blob/master/Array/Easy/2639-find-the-width-of-columns-of-a-grid/solution.py",
    "slug": "solution",
    "html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"># Created by Ashish Patel at 2025/01/16 18:47</span>\n<span class=\"pl-c\"># leetgo: 1.4.13</span>\n<span class=\"pl-c\"># https://leetcode.com/problems/find-the-width-of-columns-of-a-grid/</span>\n\n<span class=\"pl-s\">\"\"\"</span>\n<span class=\"pl-s\">2639. Find the Width of Columns of a Grid (Easy)</span>\n<span class=\"pl-s\">You are given a **0-indexed** m x n integer matrix grid. The width of a column is the maximum</span>\n<span class=\"pl-s\">**length** of its integers.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">- For example, if grid = [[-10], [3], [12]], the width of the only column is 3 since -10 is of</span>\n<span class=\"pl-s\">length 3.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Return an integer array ansof size nwhere ans[i]is the width of the iᵗʰcolumn.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">The **length** of an integer x with len digits is equal to len if x is non-negative, and len</span>\n<span class=\"pl-s\">+ 1 otherwise.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 1:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: grid = [[1],[22],[333]]</span>\n<span class=\"pl-s\">Output: [3]</span>\n<span class=\"pl-s\">Explanation: In the 0ᵗʰ column, 333 is of length 3.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 2:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: grid = [[-15,1,3],[15,7,12],[5,6,-2]]</span>\n<span class=\"pl-s\">Output: [3,1,2]</span>\n<span class=\"pl-s\">Explanation:</span>\n<span class=\"pl-s\">In the 0ᵗʰ column, only -15 is of length 3.</span>\n<span class=\"pl-s\">In the 1ˢᵗ column, all integers are of length 1.</span>\n<span class=\"pl-s\">In the 2ⁿᵈ column, both 12 and -2 are of length 2.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Constraints:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">- m == grid.length</span>\n<span class=\"pl-s\">- n == grid[i].length</span>\n<span class=\"pl-s\">- 1 &lt;= m, n &lt;= 100 </span>\n<span class=\"pl-s\">- -10⁹ &lt;= grid[r][c] &lt;= 10⁹</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">\"\"\"</span>\n\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">typing</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">leetgo_py</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">bisect</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">collections</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">functools</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">heapq</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">itertools</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">operator</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">math</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">string</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">numpy</span> <span class=\"pl-k\">as</span> <span class=\"pl-s1\">np</span>\n\n<span class=\"pl-c\"># @lc code=begin</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">Solution</span>:\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">findColumnWidth</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">grid</span>: <span class=\"pl-v\">List</span>[<span class=\"pl-v\">List</span>[<span class=\"pl-smi\">int</span>]]) <span class=\"pl-c1\">-&gt;</span> <span class=\"pl-v\">List</span>[<span class=\"pl-smi\">int</span>]:\n        <span class=\"pl-s1\">cols</span> <span class=\"pl-c1\">=</span> []\n        <span class=\"pl-k\">for</span> <span class=\"pl-s1\">col</span> <span class=\"pl-c1\">in</span> <span class=\"pl-en\">range</span>(<span class=\"pl-en\">len</span>(<span class=\"pl-s1\">grid</span>[<span class=\"pl-c1\">0</span>])):\n            <span class=\"pl-s1\">cols</span>.<span class=\"pl-c1\">append</span>([<span class=\"pl-en\">len</span>(<span class=\"pl-en\">str</span>(<span class=\"pl-s1\">row</span>[<span class=\"pl-s1\">col</span>])) <span class=\"pl-k\">for</span> <span class=\"pl-s1\">row</span> <span class=\"pl-c1\">in</span> <span class=\"pl-s1\">grid</span>])\n        \n        <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> []\n        <span class=\"pl-k\">for</span> <span class=\"pl-s1\">col</span> <span class=\"pl-c1\">in</span> <span class=\"pl-s1\">cols</span>:\n            <span class=\"pl-s1\">result</span>.<span class=\"pl-c1\">append</span>(<span class=\"pl-en\">max</span>(<span class=\"pl-s1\">col</span>))\n        \n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">result</span>\n<span class=\"pl-c\"># @lc code=end</span>\n\n<span class=\"pl-k\">if</span> <span class=\"pl-s1\">__name__</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s\">\"__main__\"</span>:\n    <span class=\"pl-s1\">grid</span> <span class=\"pl-c1\">=</span> [[<span class=\"pl-c1\">-</span><span class=\"pl-c1\">15</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">3</span>],[<span class=\"pl-c1\">15</span>,<span class=\"pl-c1\">7</span>,<span class=\"pl-c1\">12</span>],[<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">6</span>,<span class=\"pl-c1\">-</span><span class=\"pl-c1\">2</span>]]\n    <span class=\"pl-s1\">ans</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">Solution</span>().<span class=\"pl-c1\">findColumnWidth</span>(<span class=\"pl-s1\">grid</span>)\n    <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"<span class=\"pl-cce\">\\n</span>output:\"</span>, <span class=\"pl-en\">serialize</span>(<span class=\"pl-s1\">ans</span>, <span class=\"pl-s\">\"integer[]\"</span>))</pre></div>\n",
    "created": "2025-01-16T23:46:18+00:00",
    "created_utc": "2025-01-16T23:46:18+00:00",
    "updated": "2025-01-16T23:46:18+00:00",
    "updated_utc": "2025-01-16T23:46:18+00:00"
  }
}
