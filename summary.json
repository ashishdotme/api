{
  "locations": [
    {
      "id": 5831,
      "batteryState": "unplugged",
      "coordinates": "{\"-6.2262155\",\"53.2630179\"}",
      "batteryLevel": 55,
      "timestamp": "2025-01-07T18:47:04.000Z",
      "createdAt": "2025-01-07T18:47:04.693Z",
      "updatedAt": "2025-01-07T18:47:04.693Z"
    }
  ],
  "steps": [
    {
      "id": 8891,
      "stepCount": 6304,
      "date": "1/2/25",
      "fullDate": "2025-01-02T00:00:00.000Z",
      "createdAt": "2025-01-03T00:41:33.394Z",
      "updatedAt": "2025-01-03T00:41:33.394Z"
    }
  ],
  "sleep": [
    {
      "id": 227,
      "sleep": "6.3",
      "date": "12/20/24",
      "fullDate": "2024-12-20T00:00:00.000Z",
      "sleepStart": "2024-12-20T02:36:00.000Z",
      "sleepEnd": "2024-12-20T08:31:59.000Z",
      "createdAt": "2024-12-21T01:07:24.195Z",
      "updatedAt": "2024-12-21T01:07:24.195Z"
    }
  ],
  "word": [
    {
      "id": 1,
      "word": "clandestine",
      "meaning": "characterized by, done in, or executed with secrecy or concealment, especially for purposes of subversion or deception; private or surreptitious",
      "pronounciation": "klan-des-tin",
      "sentences": "Their clandestine meetings went undiscovered for two years.",
      "createdAt": "2022-01-24T19:45:33.772Z",
      "updatedAt": "2022-01-24T19:45:33.772Z"
    }
  ],
  "quote": [
    {
      "id": 2,
      "quote": "If something upsets you, it is not that thing, but your judgement of it, that causes you distress. And that judgement is in your power",
      "category": "Motivational",
      "author": "Marcus Aurelius",
      "createdAt": "2024-10-21T22:30:21.598Z",
      "updatedAt": "2024-10-21T22:30:21.598Z"
    }
  ],
  "shows": [
    {
      "id": 22,
      "title": "Peep Show Season 9",
      "language": "English",
      "showName": "Peep Show",
      "description": "Mark and Jez are a couple of twenty-something roommates who have nothing in common - except for the fact that their lives are anything but normal. Mayhem ensues as the pair strive to cope with day-to-day life.",
      "seasonNumber": 9,
      "year": 2003,
      "genre": "Comedy",
      "startedDate": "2022-01-31T00:00:00.000Z",
      "completedDate": null,
      "status": "Started",
      "loved": true,
      "imdbRating": "8.6",
      "imdbId": "tt0387764",
      "createdAt": "2022-02-01T01:30:32.275Z",
      "updatedAt": "2022-02-01T01:30:32.275Z"
    }
  ],
  "books": [
    {
      "id": 11,
      "title": "Atomic Habits",
      "author": " James Clear",
      "poster": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1655988385i/40121378.jpg",
      "description": "No matter your goals, Atomic Habits offers a proven framework for improvingâ€”every day. James Clear, one of the world's leading experts on habit formation, reveals practical strategies that will teach you exactly how to form good habits, break bad ones, and master the tiny behaviors that lead to remarkable results.",
      "notes": "Atomic Habits",
      "year": 2018,
      "genre": "Personal Development",
      "completedDate": "2023-02-08T00:00:00.000Z",
      "loved": true,
      "createdAt": "2024-10-22T14:53:34.755Z",
      "updatedAt": "2024-10-22T14:53:34.755Z"
    }
  ],
  "courses": [
    {
      "id": 2,
      "title": "MERN Stack Front To Back: Full Stack React, Redux & Node.js",
      "description": "Build and deploy a social network with Node.js, Express, React, Redux & MongoDB",
      "author": "Brad Traversy",
      "category": "React",
      "notes": "NA",
      "completedDate": "2019-01-02T00:00:00.000Z",
      "platform": "Udemy",
      "createdAt": "2022-01-21T03:28:37.957Z",
      "updatedAt": "2022-01-21T03:28:37.957Z"
    }
  ],
  "movies": [
    {
      "id": 166,
      "title": "The Exorcist",
      "description": "When a mysterious entity possesses a young girl, her mother seeks the help of two Catholic priests to save her life.",
      "review": null,
      "language": "English",
      "year": 1973,
      "genre": "Horror",
      "viewingDate": "2024-12-02T04:53:18.239Z",
      "loved": true,
      "imdbRating": "8.1",
      "imdbId": "tt0070047",
      "createdAt": "2024-12-02T14:59:17.397Z",
      "updatedAt": "2024-12-02T14:59:17.397Z"
    }
  ],
  "tasks": [],
  "updates": [
    {
      "id": 11,
      "category": "Life",
      "content": null,
      "title": "Moved to Dublin, Ireland",
      "date": "2021-09-13T10:29:42.297Z",
      "createdAt": "2024-09-15T13:36:36.858Z",
      "updatedAt": "2024-09-15T13:36:36.858Z"
    },
    {
      "id": 10,
      "category": "Life",
      "content": null,
      "title": "Started job at Honeywell, India",
      "date": "2020-10-12T10:29:42.297Z",
      "createdAt": "2024-09-15T13:32:54.840Z",
      "updatedAt": "2024-09-15T13:32:54.840Z"
    },
    {
      "id": 9,
      "category": "Life",
      "content": null,
      "title": "Started job at Amdocs, India",
      "date": "2019-01-19T10:29:42.297Z",
      "createdAt": "2024-09-15T13:28:28.681Z",
      "updatedAt": "2024-09-15T13:33:11.559Z"
    },
    {
      "id": 8,
      "category": "Life",
      "content": null,
      "title": "Started job at Nitor Infotech",
      "date": "2016-06-27T10:29:42.000Z",
      "createdAt": "2024-09-15T13:27:56.348Z",
      "updatedAt": "2024-09-15T13:35:21.819Z"
    },
    {
      "id": 7,
      "category": "Life",
      "content": null,
      "title": "Moved to Pune, India",
      "date": "2016-06-17T10:29:42.000Z",
      "createdAt": "2024-09-15T13:22:04.990Z",
      "updatedAt": "2024-09-15T13:35:34.498Z"
    },
    {
      "id": 6,
      "category": "Life",
      "content": null,
      "title": "Graduated in Computer Science and Engineering from Nagpur University, India",
      "date": "2016-05-30T10:29:42.297Z",
      "createdAt": "2024-09-15T13:21:23.009Z",
      "updatedAt": "2024-09-15T13:32:38.727Z"
    },
    {
      "id": 5,
      "category": "Life",
      "content": null,
      "title": "Born in Chhattisgarh, India",
      "date": "1993-06-04T10:29:42.297Z",
      "createdAt": "2024-09-15T13:19:16.078Z",
      "updatedAt": "2024-09-15T13:19:16.078Z"
    }
  ],
  "listens": [
    {
      "id": 1309,
      "title": "Buttercup",
      "artist": "Jack Stauber",
      "album": "Pop Food",
      "releaseYear": null,
      "genre": null,
      "listenDate": "2025-01-07T16:33:38.000Z",
      "trackNumber": null,
      "createdAt": "2025-01-07T16:33:40.285Z",
      "updatedAt": "2025-01-07T16:33:40.285Z"
    }
  ],
  "github": {
    "lastCommit": "2025-01-07T18:22:47Z",
    "recentRepos": [
      {
        "name": "leetcode-python",
        "pushedAt": "2025-01-07T18:22:48Z"
      },
      {
        "name": "omakub",
        "pushedAt": "2024-12-16T20:11:21Z"
      },
      {
        "name": "books.ashish.me",
        "pushedAt": "2024-12-05T23:03:00Z"
      },
      {
        "name": "shows.ashish.me",
        "pushedAt": "2024-12-05T23:01:49Z"
      },
      {
        "name": "movies.ashish.me",
        "pushedAt": "2024-12-05T23:00:50Z"
      },
      {
        "name": "wiki.ashish.me",
        "pushedAt": "2024-11-20T00:13:30Z"
      },
      {
        "name": "dotfiles",
        "pushedAt": "2024-11-19T23:35:30Z"
      },
      {
        "name": "cli",
        "pushedAt": "2024-11-11T22:05:56Z"
      },
      {
        "name": "blog",
        "pushedAt": "2024-11-11T15:34:12Z"
      },
      {
        "name": "workers",
        "pushedAt": "2024-11-10T10:49:26Z"
      },
      {
        "name": "ashishdotme-utils",
        "pushedAt": "2024-11-09T00:31:07Z"
      },
      {
        "name": "npm-library-starter",
        "pushedAt": "2024-11-08T23:32:13Z"
      },
      {
        "name": "task-tracker",
        "pushedAt": "2024-11-08T23:08:27Z"
      },
      {
        "name": "jobsapi.ashish.me",
        "pushedAt": "2024-11-05T23:21:30Z"
      },
      {
        "name": "dashy",
        "pushedAt": "2024-10-16T17:47:56Z"
      },
      {
        "name": "dashboard.ashish.me",
        "pushedAt": "2024-09-14T17:51:29Z"
      }
    ]
  },
  "lastLeetcode": {
    "path": "Array_Easy_1909-remove-one-element-to-make-the-array-strictly-increasing_solution.py",
    "title": "solution.py",
    "body": "```python  \n# Created by Ashish Patel at 2025/01/07 13:29\n# leetgo: 1.4.11\n# https://leetcode.com/problems/remove-one-element-to-make-the-array-strictly-increasing/\n\n\"\"\"\n1909. Remove One Element to Make the Array Strictly Increasing (Easy)\nGiven a **0-indexed** integer array nums, return trueif it can be made **strictly increasing**\nafter removing **exactly one** element, or  false otherwise. If the array is already strictly\nincreasing, return  true.\n\nThe array nums is **strictly increasing** if nums[i - 1] < nums[i] for each index (1 <= i <\nnums.length).\n\n**Example 1:**\n\n\nInput: nums = [1,2,10,5,7]\nOutput: true\nExplanation: By removing 10 at index 2 from nums, it becomes [1,2,5,7].\n[1,2,5,7] is strictly increasing, so return true.\n\n\n**Example 2:**\n\n\nInput: nums = [2,3,1,2]\nOutput: false\nExplanation:\n[3,1,2] is the result of removing the element at index 0.\n[2,1,2] is the result of removing the element at index 1.\n[2,3,2] is the result of removing the element at index 2.\n[2,3,1] is the result of removing the element at index 3.\nNo resulting array is strictly increasing, so return false.\n\n\n**Example 3:**\n\n\nInput: nums = [1,1,1]\nOutput: false\nExplanation: The result of removing any element is [1,1].\n[1,1] is not strictly increasing, so return false.\n\n\n**Constraints:**\n\n- 2 <= nums.length <= 1000\n- 1 <= nums[i] <= 1000\n\n\"\"\"\n\nfrom typing import *\nfrom leetgo_py import *\n\nimport bisect\nimport collections \nimport functools\nimport heapq \nimport itertools \nimport operator\nimport math \nimport string\n\n# @lc code=begin\n\nclass Solution:\n    def canBeIncreasing(self, nums: List[int]) -> bool:\n        removedOnce = False\n        for i in range(1, len(nums)):\n            if nums[i] <= nums[i-1]:\n                if removedOnce:\n                    return False\n                if i > 1 and nums[i] <= nums[i-2]:\n                    nums[i] = nums[i-1]\n                removedOnce = True\n        return True\n\n# @lc code=end\n\nif __name__ == \"__main__\":\n    nums = [2,3,1,2]\n    ans = Solution().canBeIncreasing(nums)\n    print(\"\\noutput:\", serialize(ans, \"boolean\"))\n```",
    "topic1": "Array",
    "topic2": "Easy",
    "topic3": "1909-remove-one-element-to-make-the-array-strictly-increasing",
    "url": "https://github.com/ashishdotme/leetcode-python/blob/master/Array/Easy/1909-remove-one-element-to-make-the-array-strictly-increasing/solution.py",
    "slug": "solution",
    "html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"># Created by Ashish Patel at 2025/01/07 13:29</span>\n<span class=\"pl-c\"># leetgo: 1.4.11</span>\n<span class=\"pl-c\"># https://leetcode.com/problems/remove-one-element-to-make-the-array-strictly-increasing/</span>\n\n<span class=\"pl-s\">\"\"\"</span>\n<span class=\"pl-s\">1909. Remove One Element to Make the Array Strictly Increasing (Easy)</span>\n<span class=\"pl-s\">Given a **0-indexed** integer array nums, return trueif it can be made **strictly increasing**</span>\n<span class=\"pl-s\">after removing **exactly one** element, or  false otherwise. If the array is already strictly</span>\n<span class=\"pl-s\">increasing, return  true.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">The array nums is **strictly increasing** if nums[i - 1] &lt; nums[i] for each index (1 &lt;= i &lt;</span>\n<span class=\"pl-s\">nums.length).</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 1:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: nums = [1,2,10,5,7]</span>\n<span class=\"pl-s\">Output: true</span>\n<span class=\"pl-s\">Explanation: By removing 10 at index 2 from nums, it becomes [1,2,5,7].</span>\n<span class=\"pl-s\">[1,2,5,7] is strictly increasing, so return true.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 2:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: nums = [2,3,1,2]</span>\n<span class=\"pl-s\">Output: false</span>\n<span class=\"pl-s\">Explanation:</span>\n<span class=\"pl-s\">[3,1,2] is the result of removing the element at index 0.</span>\n<span class=\"pl-s\">[2,1,2] is the result of removing the element at index 1.</span>\n<span class=\"pl-s\">[2,3,2] is the result of removing the element at index 2.</span>\n<span class=\"pl-s\">[2,3,1] is the result of removing the element at index 3.</span>\n<span class=\"pl-s\">No resulting array is strictly increasing, so return false.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 3:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: nums = [1,1,1]</span>\n<span class=\"pl-s\">Output: false</span>\n<span class=\"pl-s\">Explanation: The result of removing any element is [1,1].</span>\n<span class=\"pl-s\">[1,1] is not strictly increasing, so return false.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Constraints:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">- 2 &lt;= nums.length &lt;= 1000</span>\n<span class=\"pl-s\">- 1 &lt;= nums[i] &lt;= 1000</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">\"\"\"</span>\n\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">typing</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">leetgo_py</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">bisect</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">collections</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">functools</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">heapq</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">itertools</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">operator</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">math</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">string</span>\n\n<span class=\"pl-c\"># @lc code=begin</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">Solution</span>:\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">canBeIncreasing</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">nums</span>: <span class=\"pl-v\">List</span>[<span class=\"pl-smi\">int</span>]) <span class=\"pl-c1\">-&gt;</span> <span class=\"pl-smi\">bool</span>:\n        <span class=\"pl-s1\">removedOnce</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">False</span>\n        <span class=\"pl-k\">for</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">in</span> <span class=\"pl-en\">range</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-en\">len</span>(<span class=\"pl-s1\">nums</span>)):\n            <span class=\"pl-k\">if</span> <span class=\"pl-s1\">nums</span>[<span class=\"pl-s1\">i</span>] <span class=\"pl-c1\">&lt;=</span> <span class=\"pl-s1\">nums</span>[<span class=\"pl-s1\">i</span><span class=\"pl-c1\">-</span><span class=\"pl-c1\">1</span>]:\n                <span class=\"pl-k\">if</span> <span class=\"pl-s1\">removedOnce</span>:\n                    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">False</span>\n                <span class=\"pl-k\">if</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">1</span> <span class=\"pl-c1\">and</span> <span class=\"pl-s1\">nums</span>[<span class=\"pl-s1\">i</span>] <span class=\"pl-c1\">&lt;=</span> <span class=\"pl-s1\">nums</span>[<span class=\"pl-s1\">i</span><span class=\"pl-c1\">-</span><span class=\"pl-c1\">2</span>]:\n                    <span class=\"pl-s1\">nums</span>[<span class=\"pl-s1\">i</span>] <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">nums</span>[<span class=\"pl-s1\">i</span><span class=\"pl-c1\">-</span><span class=\"pl-c1\">1</span>]\n                <span class=\"pl-s1\">removedOnce</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">True</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">True</span>\n\n<span class=\"pl-c\"># @lc code=end</span>\n\n<span class=\"pl-k\">if</span> <span class=\"pl-s1\">__name__</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s\">\"__main__\"</span>:\n    <span class=\"pl-s1\">nums</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>]\n    <span class=\"pl-s1\">ans</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">Solution</span>().<span class=\"pl-c1\">canBeIncreasing</span>(<span class=\"pl-s1\">nums</span>)\n    <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"<span class=\"pl-cce\">\\n</span>output:\"</span>, <span class=\"pl-en\">serialize</span>(<span class=\"pl-s1\">ans</span>, <span class=\"pl-s\">\"boolean\"</span>))</pre></div>\n",
    "created": "2025-01-07T18:22:17+00:00",
    "created_utc": "2025-01-07T18:22:17+00:00",
    "updated": "2025-01-07T18:22:17+00:00",
    "updated_utc": "2025-01-07T18:22:17+00:00"
  }
}
