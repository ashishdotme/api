{
  "locations": [
    {
      "id": 2642,
      "batteryState": "unplugged",
      "coordinates": "{\"-6.2262726\",\"53.2628636\"}",
      "batteryLevel": 70,
      "timestamp": "2024-11-11T21:42:37.000Z",
      "createdAt": "2024-11-11T21:42:38.766Z",
      "updatedAt": "2024-11-11T21:42:38.766Z"
    }
  ],
  "steps": [
    {
      "id": 8458,
      "stepCount": 11309,
      "date": "11/10/24",
      "fullDate": "2024-11-10T00:00:00.000Z",
      "createdAt": "2024-11-11T10:37:38.920Z",
      "updatedAt": "2024-11-11T10:37:38.920Z"
    }
  ],
  "sleep": [
    {
      "id": 178,
      "sleep": "5.6",
      "date": "11/10/24",
      "fullDate": "2024-11-10T00:00:00.000Z",
      "sleepStart": "2024-11-10T02:55:00.000Z",
      "sleepEnd": "2024-11-10T07:49:59.000Z",
      "createdAt": "2024-11-11T12:59:32.924Z",
      "updatedAt": "2024-11-11T12:59:32.924Z"
    }
  ],
  "word": [
    {
      "id": 1,
      "word": "clandestine",
      "meaning": "characterized by, done in, or executed with secrecy or concealment, especially for purposes of subversion or deception; private or surreptitious",
      "pronounciation": "klan-des-tin",
      "sentences": "Their clandestine meetings went undiscovered for two years.",
      "createdAt": "2022-01-24T19:45:33.772Z",
      "updatedAt": "2022-01-24T19:45:33.772Z"
    }
  ],
  "quote": [
    {
      "id": 2,
      "quote": "If something upsets you, it is not that thing, but your judgement of it, that causes you distress. And that judgement is in your power",
      "category": "Motivational",
      "author": "Marcus Aurelius",
      "createdAt": "2024-10-21T22:30:21.598Z",
      "updatedAt": "2024-10-21T22:30:21.598Z"
    }
  ],
  "shows": [
    {
      "id": 22,
      "title": "Peep Show Season 9",
      "language": "English",
      "showName": "Peep Show",
      "description": "Mark and Jez are a couple of twenty-something roommates who have nothing in common - except for the fact that their lives are anything but normal. Mayhem ensues as the pair strive to cope with day-to-day life.",
      "seasonNumber": 9,
      "year": 2003,
      "genre": "Comedy",
      "startedDate": "2022-01-31T00:00:00.000Z",
      "completedDate": null,
      "status": "Started",
      "loved": true,
      "imdbRating": "8.6",
      "imdbId": "tt0387764",
      "createdAt": "2022-02-01T01:30:32.275Z",
      "updatedAt": "2022-02-01T01:30:32.275Z"
    }
  ],
  "books": [
    {
      "id": 11,
      "title": "Atomic Habits",
      "author": " James Clear",
      "poster": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1655988385i/40121378.jpg",
      "description": "No matter your goals, Atomic Habits offers a proven framework for improving—every day. James Clear, one of the world's leading experts on habit formation, reveals practical strategies that will teach you exactly how to form good habits, break bad ones, and master the tiny behaviors that lead to remarkable results.",
      "notes": "Atomic Habits",
      "year": 2018,
      "genre": "Personal Development",
      "completedDate": "2023-02-08T00:00:00.000Z",
      "loved": true,
      "createdAt": "2024-10-22T14:53:34.755Z",
      "updatedAt": "2024-10-22T14:53:34.755Z"
    }
  ],
  "courses": [
    {
      "id": 2,
      "title": "MERN Stack Front To Back: Full Stack React, Redux & Node.js",
      "description": "Build and deploy a social network with Node.js, Express, React, Redux & MongoDB",
      "author": "Brad Traversy",
      "category": "React",
      "notes": "NA",
      "completedDate": "2019-01-02T00:00:00.000Z",
      "platform": "Udemy",
      "createdAt": "2022-01-21T03:28:37.957Z",
      "updatedAt": "2022-01-21T03:28:37.957Z"
    }
  ],
  "movies": [
    {
      "id": 160,
      "title": "Bhool Bhulaiyaa 3",
      "description": "Ruhaan, a fraudster posing as an exorcist, takes on a lucrative case at a haunted castle, unraveling a sinister plot involving mischievous priests, culminating in a hilarious yet thrilling ride filled with unexpected twists and scares.",
      "review": null,
      "language": "Hindi",
      "year": 2024,
      "genre": "Comedy, Horror",
      "viewingDate": "2024-11-09T14:35:48.585Z",
      "loved": true,
      "imdbRating": "5.9",
      "imdbId": "tt26932223",
      "createdAt": "2024-11-09T22:35:36.938Z",
      "updatedAt": "2024-11-09T22:35:36.938Z"
    }
  ],
  "tasks": [
    {
      "id": 565,
      "content": "Organize photos",
      "category": "Now",
      "projectId": "671d02e0eba7b8000000022f",
      "todoId": "672f928deba7b80000000208",
      "completed": false,
      "completedDate": null,
      "dueDate": "2024-11-09T16:49:52.410Z",
      "createdAt": "2024-11-09T16:49:52.411Z",
      "updatedAt": "2024-11-09T16:49:52.411Z"
    },
    {
      "id": 566,
      "content": "Create personal cli",
      "category": "Now",
      "projectId": "671d02e0eba7b8000000022f",
      "todoId": "67325d508f088184d96d7da7",
      "completed": false,
      "completedDate": null,
      "dueDate": "2024-11-11T19:38:56.218Z",
      "createdAt": "2024-11-11T19:38:56.967Z",
      "updatedAt": "2024-11-11T19:38:56.967Z"
    }
  ],
  "updates": [
    {
      "id": 11,
      "category": "Life",
      "content": null,
      "title": "Moved to Dublin, Ireland",
      "date": "2021-09-13T10:29:42.297Z",
      "createdAt": "2024-09-15T13:36:36.858Z",
      "updatedAt": "2024-09-15T13:36:36.858Z"
    },
    {
      "id": 10,
      "category": "Life",
      "content": null,
      "title": "Started job at Honeywell, India",
      "date": "2020-10-12T10:29:42.297Z",
      "createdAt": "2024-09-15T13:32:54.840Z",
      "updatedAt": "2024-09-15T13:32:54.840Z"
    },
    {
      "id": 9,
      "category": "Life",
      "content": null,
      "title": "Started job at Amdocs, India",
      "date": "2019-01-19T10:29:42.297Z",
      "createdAt": "2024-09-15T13:28:28.681Z",
      "updatedAt": "2024-09-15T13:33:11.559Z"
    },
    {
      "id": 8,
      "category": "Life",
      "content": null,
      "title": "Started job at Nitor Infotech",
      "date": "2016-06-27T10:29:42.000Z",
      "createdAt": "2024-09-15T13:27:56.348Z",
      "updatedAt": "2024-09-15T13:35:21.819Z"
    },
    {
      "id": 7,
      "category": "Life",
      "content": null,
      "title": "Moved to Pune, India",
      "date": "2016-06-17T10:29:42.000Z",
      "createdAt": "2024-09-15T13:22:04.990Z",
      "updatedAt": "2024-09-15T13:35:34.498Z"
    },
    {
      "id": 6,
      "category": "Life",
      "content": null,
      "title": "Graduated in Computer Science and Engineering from Nagpur University, India",
      "date": "2016-05-30T10:29:42.297Z",
      "createdAt": "2024-09-15T13:21:23.009Z",
      "updatedAt": "2024-09-15T13:32:38.727Z"
    },
    {
      "id": 5,
      "category": "Life",
      "content": null,
      "title": "Born in Chhattisgarh, India",
      "date": "1993-06-04T10:29:42.297Z",
      "createdAt": "2024-09-15T13:19:16.078Z",
      "updatedAt": "2024-09-15T13:19:16.078Z"
    }
  ],
  "listens": [
    {
      "id": 955,
      "title": "10:35",
      "artist": "Tiësto",
      "album": "10:35",
      "releaseYear": null,
      "genre": null,
      "listenDate": "2024-11-11T17:25:32.000Z",
      "trackNumber": null,
      "createdAt": "2024-11-11T17:25:34.680Z",
      "updatedAt": "2024-11-11T17:25:34.680Z"
    }
  ],
  "github": {
    "lastCommit": "2024-11-11T21:31:45Z",
    "recentRepos": [
      {
        "name": "cli",
        "pushedAt": "2024-11-11T21:31:48Z"
      },
      {
        "name": "blog",
        "pushedAt": "2024-11-11T15:34:12Z"
      },
      {
        "name": "workers",
        "pushedAt": "2024-11-10T10:49:26Z"
      },
      {
        "name": "wiki.ashish.me",
        "pushedAt": "2024-11-09T23:59:07Z"
      },
      {
        "name": "ashishdotme-utils",
        "pushedAt": "2024-11-09T00:31:07Z"
      },
      {
        "name": "npm-library-starter",
        "pushedAt": "2024-11-08T23:32:13Z"
      },
      {
        "name": "task-tracker",
        "pushedAt": "2024-11-08T23:08:27Z"
      },
      {
        "name": "jobsapi.ashish.me",
        "pushedAt": "2024-11-05T23:21:30Z"
      },
      {
        "name": "movies.ashish.me",
        "pushedAt": "2024-10-31T02:32:41Z"
      },
      {
        "name": "books.ashish.me",
        "pushedAt": "2024-10-31T02:28:39Z"
      },
      {
        "name": "shows.ashish.me",
        "pushedAt": "2024-10-29T00:22:34Z"
      },
      {
        "name": "dotfiles",
        "pushedAt": "2024-10-27T20:48:21Z"
      },
      {
        "name": "dashy",
        "pushedAt": "2024-10-16T17:47:56Z"
      },
      {
        "name": "dashboard.ashish.me",
        "pushedAt": "2024-09-14T17:51:29Z"
      },
      {
        "name": "courses.ashish.me",
        "pushedAt": "2024-09-12T23:20:56Z"
      },
      {
        "name": "ashishdotme.github.io",
        "pushedAt": "2024-09-10T23:36:11Z"
      }
    ]
  },
  "lastLeetcode": {
    "path": "Array_Easy_0205-isomorphic-strings_solution.py",
    "title": "solution.py",
    "body": "```python  \n# Created by Ashish Patel at 2024/08/21 11:00\n# leetgo: 1.4.7\n# https://leetcode.com/problems/isomorphic-strings/\n\n\"\"\"\n205. Isomorphic Strings (Easy)\nGiven two strings s and t, determine if they are isomorphic.\n\nTwo strings s and t are isomorphic if the characters in s can be replaced to get t.\n\nAll occurrences of a character must be replaced with another character while preserving the order of\ncharacters. No two characters may map to the same character, but a character may map to itself.\n\n**Example 1:**\n\n\nInput: s = \"egg\", t = \"add\"\nOutput: true\n\n\n**Example 2:**\n\n\nInput: s = \"foo\", t = \"bar\"\nOutput: false\n\n\n**Example 3:**\n\n\nInput: s = \"paper\", t = \"title\"\nOutput: true\n\n\n**Constraints:**\n\n- 1 <= s.length <= 5 * 10⁴\n- t.length == s.length\n- s and t consist of any valid ascii character.\n\n\"\"\"\n\nfrom typing import *\nfrom leetgo_py import *\n\nimport bisect\nimport collections \nimport functools\nimport heapq \nimport itertools \nimport operator\nimport math \nimport string\n\n# @lc code=begin\n\nclass Solution:\n    def isIsomorphic(self, s: str, t: str) -> bool:\n        countS, countT = {}, {}\n        for i in range(len(s)):\n            countS[s[i]] = countS.get(s[i], 0) + 1\n            countT[t[i]] = countT.get(t[i], 0) + 1\n        return len(list(countS.keys())) == len(list(countT.keys())) \n\n# @lc code=end\n\nif __name__ == \"__main__\":\n    s: str = deserialize(\"str\", read_line())\n    t: str = deserialize(\"str\", read_line())\n    ans = Solution().isIsomorphic(s, t)\n    print(\"\\noutput:\", serialize(ans, \"boolean\"))\n```",
    "topic1": "Array",
    "topic2": "Easy",
    "topic3": "0205-isomorphic-strings",
    "url": "https://github.com/ashishdotme/leetcode-python/blob/master/Array/Easy/0205-isomorphic-strings/solution.py",
    "slug": "solution",
    "html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"># Created by Ashish Patel at 2024/08/21 11:00</span>\n<span class=\"pl-c\"># leetgo: 1.4.7</span>\n<span class=\"pl-c\"># https://leetcode.com/problems/isomorphic-strings/</span>\n\n<span class=\"pl-s\">\"\"\"</span>\n<span class=\"pl-s\">205. Isomorphic Strings (Easy)</span>\n<span class=\"pl-s\">Given two strings s and t, determine if they are isomorphic.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Two strings s and t are isomorphic if the characters in s can be replaced to get t.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">All occurrences of a character must be replaced with another character while preserving the order of</span>\n<span class=\"pl-s\">characters. No two characters may map to the same character, but a character may map to itself.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 1:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: s = \"egg\", t = \"add\"</span>\n<span class=\"pl-s\">Output: true</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 2:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: s = \"foo\", t = \"bar\"</span>\n<span class=\"pl-s\">Output: false</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 3:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: s = \"paper\", t = \"title\"</span>\n<span class=\"pl-s\">Output: true</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Constraints:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">- 1 &lt;= s.length &lt;= 5 * 10⁴</span>\n<span class=\"pl-s\">- t.length == s.length</span>\n<span class=\"pl-s\">- s and t consist of any valid ascii character.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">\"\"\"</span>\n\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">typing</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">leetgo_py</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">bisect</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">collections</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">functools</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">heapq</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">itertools</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">operator</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">math</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">string</span>\n\n<span class=\"pl-c\"># @lc code=begin</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">Solution</span>:\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">isIsomorphic</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">s</span>: <span class=\"pl-s1\">str</span>, <span class=\"pl-s1\">t</span>: <span class=\"pl-s1\">str</span>) <span class=\"pl-c1\">-&gt;</span> <span class=\"pl-s1\">bool</span>:\n        <span class=\"pl-s1\">countS</span>, <span class=\"pl-s1\">countT</span> <span class=\"pl-c1\">=</span> {}, {}\n        <span class=\"pl-k\">for</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">in</span> <span class=\"pl-en\">range</span>(<span class=\"pl-en\">len</span>(<span class=\"pl-s1\">s</span>)):\n            <span class=\"pl-s1\">countS</span>[<span class=\"pl-s1\">s</span>[<span class=\"pl-s1\">i</span>]] <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">countS</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-s1\">s</span>[<span class=\"pl-s1\">i</span>], <span class=\"pl-c1\">0</span>) <span class=\"pl-c1\">+</span> <span class=\"pl-c1\">1</span>\n            <span class=\"pl-s1\">countT</span>[<span class=\"pl-s1\">t</span>[<span class=\"pl-s1\">i</span>]] <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">countT</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-s1\">t</span>[<span class=\"pl-s1\">i</span>], <span class=\"pl-c1\">0</span>) <span class=\"pl-c1\">+</span> <span class=\"pl-c1\">1</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-en\">len</span>(<span class=\"pl-en\">list</span>(<span class=\"pl-s1\">countS</span>.<span class=\"pl-en\">keys</span>())) <span class=\"pl-c1\">==</span> <span class=\"pl-en\">len</span>(<span class=\"pl-en\">list</span>(<span class=\"pl-s1\">countT</span>.<span class=\"pl-en\">keys</span>())) \n\n<span class=\"pl-c\"># @lc code=end</span>\n\n<span class=\"pl-k\">if</span> <span class=\"pl-s1\">__name__</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s\">\"__main__\"</span>:\n    <span class=\"pl-s1\">s</span>: <span class=\"pl-s1\">str</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">deserialize</span>(<span class=\"pl-s\">\"str\"</span>, <span class=\"pl-en\">read_line</span>())\n    <span class=\"pl-s1\">t</span>: <span class=\"pl-s1\">str</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">deserialize</span>(<span class=\"pl-s\">\"str\"</span>, <span class=\"pl-en\">read_line</span>())\n    <span class=\"pl-s1\">ans</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Solution</span>().<span class=\"pl-en\">isIsomorphic</span>(<span class=\"pl-s1\">s</span>, <span class=\"pl-s1\">t</span>)\n    <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"<span class=\"pl-cce\">\\n</span>output:\"</span>, <span class=\"pl-en\">serialize</span>(<span class=\"pl-s1\">ans</span>, <span class=\"pl-s\">\"boolean\"</span>))</pre></div>\n",
    "created": "2024-08-21T14:13:36+01:00",
    "created_utc": "2024-08-21T13:13:36+00:00",
    "updated": "2024-08-21T14:13:36+01:00",
    "updated_utc": "2024-08-21T13:13:36+00:00"
  }
}
