{
  "locations": [
    {
      "id": 4701,
      "batteryState": "charging",
      "coordinates": "{\"-6.138897\",\"53.2449711\"}",
      "batteryLevel": 25,
      "timestamp": "2024-12-11T16:26:34.000Z",
      "createdAt": "2024-12-11T16:26:41.039Z",
      "updatedAt": "2024-12-11T16:26:41.039Z"
    }
  ],
  "steps": [
    {
      "id": 8714,
      "stepCount": 6248,
      "date": "12/12/24",
      "fullDate": "2024-12-12T00:00:00.000Z",
      "createdAt": "2024-12-13T09:00:03.943Z",
      "updatedAt": "2024-12-13T09:00:03.943Z"
    }
  ],
  "sleep": [
    {
      "id": 219,
      "sleep": "7.5",
      "date": "11/23/24",
      "fullDate": "2024-11-23T00:00:00.000Z",
      "sleepStart": "2024-11-23T02:29:00.000Z",
      "sleepEnd": "2024-11-23T09:25:59.000Z",
      "createdAt": "2024-11-24T13:21:12.129Z",
      "updatedAt": "2024-11-24T13:21:12.129Z"
    }
  ],
  "word": [
    {
      "id": 1,
      "word": "clandestine",
      "meaning": "characterized by, done in, or executed with secrecy or concealment, especially for purposes of subversion or deception; private or surreptitious",
      "pronounciation": "klan-des-tin",
      "sentences": "Their clandestine meetings went undiscovered for two years.",
      "createdAt": "2022-01-24T19:45:33.772Z",
      "updatedAt": "2022-01-24T19:45:33.772Z"
    }
  ],
  "quote": [
    {
      "id": 2,
      "quote": "If something upsets you, it is not that thing, but your judgement of it, that causes you distress. And that judgement is in your power",
      "category": "Motivational",
      "author": "Marcus Aurelius",
      "createdAt": "2024-10-21T22:30:21.598Z",
      "updatedAt": "2024-10-21T22:30:21.598Z"
    }
  ],
  "shows": [
    {
      "id": 22,
      "title": "Peep Show Season 9",
      "language": "English",
      "showName": "Peep Show",
      "description": "Mark and Jez are a couple of twenty-something roommates who have nothing in common - except for the fact that their lives are anything but normal. Mayhem ensues as the pair strive to cope with day-to-day life.",
      "seasonNumber": 9,
      "year": 2003,
      "genre": "Comedy",
      "startedDate": "2022-01-31T00:00:00.000Z",
      "completedDate": null,
      "status": "Started",
      "loved": true,
      "imdbRating": "8.6",
      "imdbId": "tt0387764",
      "createdAt": "2022-02-01T01:30:32.275Z",
      "updatedAt": "2022-02-01T01:30:32.275Z"
    }
  ],
  "books": [
    {
      "id": 11,
      "title": "Atomic Habits",
      "author": " James Clear",
      "poster": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1655988385i/40121378.jpg",
      "description": "No matter your goals, Atomic Habits offers a proven framework for improvingâ€”every day. James Clear, one of the world's leading experts on habit formation, reveals practical strategies that will teach you exactly how to form good habits, break bad ones, and master the tiny behaviors that lead to remarkable results.",
      "notes": "Atomic Habits",
      "year": 2018,
      "genre": "Personal Development",
      "completedDate": "2023-02-08T00:00:00.000Z",
      "loved": true,
      "createdAt": "2024-10-22T14:53:34.755Z",
      "updatedAt": "2024-10-22T14:53:34.755Z"
    }
  ],
  "courses": [
    {
      "id": 2,
      "title": "MERN Stack Front To Back: Full Stack React, Redux & Node.js",
      "description": "Build and deploy a social network with Node.js, Express, React, Redux & MongoDB",
      "author": "Brad Traversy",
      "category": "React",
      "notes": "NA",
      "completedDate": "2019-01-02T00:00:00.000Z",
      "platform": "Udemy",
      "createdAt": "2022-01-21T03:28:37.957Z",
      "updatedAt": "2022-01-21T03:28:37.957Z"
    }
  ],
  "movies": [
    {
      "id": 166,
      "title": "The Exorcist",
      "description": "When a mysterious entity possesses a young girl, her mother seeks the help of two Catholic priests to save her life.",
      "review": null,
      "language": "English",
      "year": 1973,
      "genre": "Horror",
      "viewingDate": "2024-12-02T04:53:18.239Z",
      "loved": true,
      "imdbRating": "8.1",
      "imdbId": "tt0070047",
      "createdAt": "2024-12-02T14:59:17.397Z",
      "updatedAt": "2024-12-02T14:59:17.397Z"
    }
  ],
  "tasks": [
    {
      "id": 565,
      "content": "Organize photos",
      "category": "Now",
      "projectId": "671d02e0eba7b8000000022f",
      "todoId": "672f928deba7b80000000208",
      "completed": false,
      "completedDate": null,
      "dueDate": "2024-11-09T16:49:52.410Z",
      "createdAt": "2024-11-09T16:49:52.411Z",
      "updatedAt": "2024-11-09T16:49:52.411Z"
    },
    {
      "id": 568,
      "content": "Solve Leetcode 3349",
      "category": "Now",
      "projectId": "671d02e0eba7b8000000022f",
      "todoId": "6733eafdeba7b80000000355",
      "completed": false,
      "completedDate": null,
      "dueDate": "2024-11-12T23:56:27.047Z",
      "createdAt": "2024-11-12T23:56:27.048Z",
      "updatedAt": "2024-11-12T23:56:27.048Z"
    }
  ],
  "updates": [
    {
      "id": 11,
      "category": "Life",
      "content": null,
      "title": "Moved to Dublin, Ireland",
      "date": "2021-09-13T10:29:42.297Z",
      "createdAt": "2024-09-15T13:36:36.858Z",
      "updatedAt": "2024-09-15T13:36:36.858Z"
    },
    {
      "id": 10,
      "category": "Life",
      "content": null,
      "title": "Started job at Honeywell, India",
      "date": "2020-10-12T10:29:42.297Z",
      "createdAt": "2024-09-15T13:32:54.840Z",
      "updatedAt": "2024-09-15T13:32:54.840Z"
    },
    {
      "id": 9,
      "category": "Life",
      "content": null,
      "title": "Started job at Amdocs, India",
      "date": "2019-01-19T10:29:42.297Z",
      "createdAt": "2024-09-15T13:28:28.681Z",
      "updatedAt": "2024-09-15T13:33:11.559Z"
    },
    {
      "id": 8,
      "category": "Life",
      "content": null,
      "title": "Started job at Nitor Infotech",
      "date": "2016-06-27T10:29:42.000Z",
      "createdAt": "2024-09-15T13:27:56.348Z",
      "updatedAt": "2024-09-15T13:35:21.819Z"
    },
    {
      "id": 7,
      "category": "Life",
      "content": null,
      "title": "Moved to Pune, India",
      "date": "2016-06-17T10:29:42.000Z",
      "createdAt": "2024-09-15T13:22:04.990Z",
      "updatedAt": "2024-09-15T13:35:34.498Z"
    },
    {
      "id": 6,
      "category": "Life",
      "content": null,
      "title": "Graduated in Computer Science and Engineering from Nagpur University, India",
      "date": "2016-05-30T10:29:42.297Z",
      "createdAt": "2024-09-15T13:21:23.009Z",
      "updatedAt": "2024-09-15T13:32:38.727Z"
    },
    {
      "id": 5,
      "category": "Life",
      "content": null,
      "title": "Born in Chhattisgarh, India",
      "date": "1993-06-04T10:29:42.297Z",
      "createdAt": "2024-09-15T13:19:16.078Z",
      "updatedAt": "2024-09-15T13:19:16.078Z"
    }
  ],
  "listens": [
    {
      "id": 1130,
      "title": "Nachde Ne Saare",
      "artist": "Jasleen Royal",
      "album": "Baar Baar Dekho (Original Motion Picture Soundtrack)",
      "releaseYear": null,
      "genre": null,
      "listenDate": "2024-12-09T17:05:21.000Z",
      "trackNumber": null,
      "createdAt": "2024-12-09T17:05:23.614Z",
      "updatedAt": "2024-12-09T17:05:23.614Z"
    }
  ],
  "github": {
    "lastCommit": "2024-12-10T15:02:44Z",
    "recentRepos": [
      {
        "name": "leetcode-python",
        "pushedAt": "2024-12-10T15:02:44Z"
      },
      {
        "name": "books.ashish.me",
        "pushedAt": "2024-12-05T23:03:00Z"
      },
      {
        "name": "shows.ashish.me",
        "pushedAt": "2024-12-05T23:01:49Z"
      },
      {
        "name": "movies.ashish.me",
        "pushedAt": "2024-12-05T23:00:50Z"
      },
      {
        "name": "wiki.ashish.me",
        "pushedAt": "2024-11-20T00:13:30Z"
      },
      {
        "name": "dotfiles",
        "pushedAt": "2024-11-19T23:35:30Z"
      },
      {
        "name": "omakub",
        "pushedAt": "2024-11-19T19:50:42Z"
      },
      {
        "name": "cli",
        "pushedAt": "2024-11-11T22:05:56Z"
      },
      {
        "name": "blog",
        "pushedAt": "2024-11-11T15:34:12Z"
      },
      {
        "name": "workers",
        "pushedAt": "2024-11-10T10:49:26Z"
      },
      {
        "name": "ashishdotme-utils",
        "pushedAt": "2024-11-09T00:31:07Z"
      },
      {
        "name": "npm-library-starter",
        "pushedAt": "2024-11-08T23:32:13Z"
      },
      {
        "name": "task-tracker",
        "pushedAt": "2024-11-08T23:08:27Z"
      },
      {
        "name": "jobsapi.ashish.me",
        "pushedAt": "2024-11-05T23:21:30Z"
      },
      {
        "name": "dashy",
        "pushedAt": "2024-10-16T17:47:56Z"
      },
      {
        "name": "dashboard.ashish.me",
        "pushedAt": "2024-09-14T17:51:29Z"
      }
    ]
  },
  "lastLeetcode": {
    "path": "Array_Easy_3318-find-x-sum-of-all-k-long-subarrays-i_solution.py",
    "title": "solution.py",
    "body": "```python  \n# Created by Ashish Patel at 2024/11/19 13:20\n# leetgo: 1.4.11\n# https://leetcode.com/problems/find-x-sum-of-all-k-long-subarrays-i/\n\n\"\"\"\n3318. Find X-Sum of All K-Long Subarrays I (Easy)\nYou are given an array nums of n integers and two integers k and x.\n\nThe **x-sum** of an array is calculated by the following procedure:\n\n- Count the occurrences of all elements in the array.\n- Keep only the occurrences of the top x most frequent elements. If two elements have the same\nnumber of occurrences, the element with the **bigger** value is considered more frequent.\n- Calculate the sum of the resulting array.\n\n**Note** that if an array has less than x distinct elements, its **x-sum** is the sum of the array.\n\nReturn an integer array answer of length n - k + 1 where answer[i] is the **x-sum** of the\nsubarray nums[i..i + k - 1].\n\n**Example 1:**\n\n**Input:** nums = \\[1,1,2,2,3,4,2,3\\], k = 6, x = 2\n\n**Output:**\\[6,10,12\\]\n\n**Explanation:**\n\n- For subarray [1, 1, 2, 2, 3, 4], only elements 1 and 2 will be kept in the resulting array.\nHence, answer[0] = 1 + 1 + 2 + 2.\n- For subarray [1, 2, 2, 3, 4, 2], only elements 2 and 4 will be kept in the resulting array.\nHence, answer[1] = 2 + 2 + 2 + 4. Note that 4 is kept in the array since it is bigger than 3 and 1\nwhich occur the same number of times.\n- For subarray [2, 2, 3, 4, 2, 3], only elements 2 and 3 are kept in the resulting array. Hence,\nanswer[2] = 2 + 2 + 2 + 3 + 3.\n\n**Example 2:**\n\n**Input:** nums = \\[3,8,7,8,7,5\\], k = 2, x = 2\n\n**Output:**\\[11,15,15,15,12\\]\n\n**Explanation:**\n\nSince k == x, answer[i] is equal to the sum of the subarray nums[i..i + k - 1].\n\n**Constraints:**\n\n- 1 <= n == nums.length <= 50\n- 1 <= nums[i] <= 50\n- 1 <= x <= k <= nums.length\n\n\"\"\"\n\nfrom typing import *\nfrom leetgo_py import *\n\nimport bisect\nimport collections \nimport functools\nimport heapq \nimport itertools \nimport operator\nimport math \nimport string\nimport leetcode as lc\n\n# @lc code=begin\n\nclass Solution:\n    def findXSum(self, nums: List[int], k: int, x: int) -> List[int]:\n        def findXFrequentItems(subArray, x):\n            dict = {}\n            for i in range(len(subArray)):\n                dict[subArray[i]] = dict.get(subArray[i], 0) + 1\n            heap = [[value, key] for key, value in dict.items()]\n            xFrequent = heapq.nlargest(x, heap)\n            return xFrequent\n        \n        result = []\n        for i in range(len(nums) - k + 1):\n            xFrequent = findXFrequentItems(nums[i:i+k], x)\n            sum = 0\n            for i in range(len(xFrequent)):\n                sum += xFrequent[i][0] * xFrequent[i][1]\n            result.append(sum)\n        return result\n\n# @lc code=end\n\nif __name__ == \"__main__\":\n    nums: List[int] = deserialize(\"List[int]\", read_line())\n    k: int = deserialize(\"int\", read_line())\n    x: int = deserialize(\"int\", read_line())\n    # nums, k, x = [9,2,2], 3, 3\n    ans = Solution().findXSum(nums, k, x)\n    print(\"\\noutput:\", serialize(ans, \"integer[]\"))\n```",
    "topic1": "Array",
    "topic2": "Easy",
    "topic3": "3318-find-x-sum-of-all-k-long-subarrays-i",
    "url": "https://github.com/ashishdotme/leetcode-python/blob/master/Array/Easy/3318-find-x-sum-of-all-k-long-subarrays-i/solution.py",
    "slug": "solution",
    "html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"># Created by Ashish Patel at 2024/11/19 13:20</span>\n<span class=\"pl-c\"># leetgo: 1.4.11</span>\n<span class=\"pl-c\"># https://leetcode.com/problems/find-x-sum-of-all-k-long-subarrays-i/</span>\n\n<span class=\"pl-s\">\"\"\"</span>\n<span class=\"pl-s\">3318. Find X-Sum of All K-Long Subarrays I (Easy)</span>\n<span class=\"pl-s\">You are given an array nums of n integers and two integers k and x.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">The **x-sum** of an array is calculated by the following procedure:</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">- Count the occurrences of all elements in the array.</span>\n<span class=\"pl-s\">- Keep only the occurrences of the top x most frequent elements. If two elements have the same</span>\n<span class=\"pl-s\">number of occurrences, the element with the **bigger** value is considered more frequent.</span>\n<span class=\"pl-s\">- Calculate the sum of the resulting array.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Note** that if an array has less than x distinct elements, its **x-sum** is the sum of the array.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Return an integer array answer of length n - k + 1 where answer[i] is the **x-sum** of the</span>\n<span class=\"pl-s\">subarray nums[i..i + k - 1].</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 1:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Input:** nums = \\[1,1,2,2,3,4,2,3\\], k = 6, x = 2</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Output:**\\[6,10,12\\]</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Explanation:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">- For subarray [1, 1, 2, 2, 3, 4], only elements 1 and 2 will be kept in the resulting array.</span>\n<span class=\"pl-s\">Hence, answer[0] = 1 + 1 + 2 + 2.</span>\n<span class=\"pl-s\">- For subarray [1, 2, 2, 3, 4, 2], only elements 2 and 4 will be kept in the resulting array.</span>\n<span class=\"pl-s\">Hence, answer[1] = 2 + 2 + 2 + 4. Note that 4 is kept in the array since it is bigger than 3 and 1</span>\n<span class=\"pl-s\">which occur the same number of times.</span>\n<span class=\"pl-s\">- For subarray [2, 2, 3, 4, 2, 3], only elements 2 and 3 are kept in the resulting array. Hence,</span>\n<span class=\"pl-s\">answer[2] = 2 + 2 + 2 + 3 + 3.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 2:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Input:** nums = \\[3,8,7,8,7,5\\], k = 2, x = 2</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Output:**\\[11,15,15,15,12\\]</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Explanation:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Since k == x, answer[i] is equal to the sum of the subarray nums[i..i + k - 1].</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Constraints:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">- 1 &lt;= n == nums.length &lt;= 50</span>\n<span class=\"pl-s\">- 1 &lt;= nums[i] &lt;= 50</span>\n<span class=\"pl-s\">- 1 &lt;= x &lt;= k &lt;= nums.length</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">\"\"\"</span>\n\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">typing</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">leetgo_py</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">bisect</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">collections</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">functools</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">heapq</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">itertools</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">operator</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">math</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">string</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">leetcode</span> <span class=\"pl-k\">as</span> <span class=\"pl-s1\">lc</span>\n\n<span class=\"pl-c\"># @lc code=begin</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">Solution</span>:\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">findXSum</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">nums</span>: <span class=\"pl-v\">List</span>[<span class=\"pl-smi\">int</span>], <span class=\"pl-s1\">k</span>: <span class=\"pl-smi\">int</span>, <span class=\"pl-s1\">x</span>: <span class=\"pl-smi\">int</span>) <span class=\"pl-c1\">-&gt;</span> <span class=\"pl-v\">List</span>[<span class=\"pl-smi\">int</span>]:\n        <span class=\"pl-k\">def</span> <span class=\"pl-en\">findXFrequentItems</span>(<span class=\"pl-s1\">subArray</span>, <span class=\"pl-s1\">x</span>):\n            <span class=\"pl-s1\">dict</span> <span class=\"pl-c1\">=</span> {}\n            <span class=\"pl-k\">for</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">in</span> <span class=\"pl-en\">range</span>(<span class=\"pl-en\">len</span>(<span class=\"pl-s1\">subArray</span>)):\n                <span class=\"pl-s1\">dict</span>[<span class=\"pl-s1\">subArray</span>[<span class=\"pl-s1\">i</span>]] <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">dict</span>.<span class=\"pl-c1\">get</span>(<span class=\"pl-s1\">subArray</span>[<span class=\"pl-s1\">i</span>], <span class=\"pl-c1\">0</span>) <span class=\"pl-c1\">+</span> <span class=\"pl-c1\">1</span>\n            <span class=\"pl-s1\">heap</span> <span class=\"pl-c1\">=</span> [[<span class=\"pl-s1\">value</span>, <span class=\"pl-s1\">key</span>] <span class=\"pl-k\">for</span> <span class=\"pl-s1\">key</span>, <span class=\"pl-s1\">value</span> <span class=\"pl-c1\">in</span> <span class=\"pl-s1\">dict</span>.<span class=\"pl-c1\">items</span>()]\n            <span class=\"pl-s1\">xFrequent</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">heapq</span>.<span class=\"pl-c1\">nlargest</span>(<span class=\"pl-s1\">x</span>, <span class=\"pl-s1\">heap</span>)\n            <span class=\"pl-k\">return</span> <span class=\"pl-s1\">xFrequent</span>\n        \n        <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> []\n        <span class=\"pl-k\">for</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">in</span> <span class=\"pl-en\">range</span>(<span class=\"pl-en\">len</span>(<span class=\"pl-s1\">nums</span>) <span class=\"pl-c1\">-</span> <span class=\"pl-s1\">k</span> <span class=\"pl-c1\">+</span> <span class=\"pl-c1\">1</span>):\n            <span class=\"pl-s1\">xFrequent</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">findXFrequentItems</span>(<span class=\"pl-s1\">nums</span>[<span class=\"pl-s1\">i</span>:<span class=\"pl-s1\">i</span><span class=\"pl-c1\">+</span><span class=\"pl-s1\">k</span>], <span class=\"pl-s1\">x</span>)\n            <span class=\"pl-s1\">sum</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span>\n            <span class=\"pl-k\">for</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">in</span> <span class=\"pl-en\">range</span>(<span class=\"pl-en\">len</span>(<span class=\"pl-s1\">xFrequent</span>)):\n                <span class=\"pl-s1\">sum</span> <span class=\"pl-c1\">+=</span> <span class=\"pl-s1\">xFrequent</span>[<span class=\"pl-s1\">i</span>][<span class=\"pl-c1\">0</span>] <span class=\"pl-c1\">*</span> <span class=\"pl-s1\">xFrequent</span>[<span class=\"pl-s1\">i</span>][<span class=\"pl-c1\">1</span>]\n            <span class=\"pl-s1\">result</span>.<span class=\"pl-c1\">append</span>(<span class=\"pl-s1\">sum</span>)\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">result</span>\n\n<span class=\"pl-c\"># @lc code=end</span>\n\n<span class=\"pl-k\">if</span> <span class=\"pl-s1\">__name__</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s\">\"__main__\"</span>:\n    <span class=\"pl-s1\">nums</span>: <span class=\"pl-v\">List</span>[<span class=\"pl-smi\">int</span>] <span class=\"pl-c1\">=</span> <span class=\"pl-en\">deserialize</span>(<span class=\"pl-s\">\"List[int]\"</span>, <span class=\"pl-en\">read_line</span>())\n    <span class=\"pl-s1\">k</span>: <span class=\"pl-smi\">int</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">deserialize</span>(<span class=\"pl-s\">\"int\"</span>, <span class=\"pl-en\">read_line</span>())\n    <span class=\"pl-s1\">x</span>: <span class=\"pl-smi\">int</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">deserialize</span>(<span class=\"pl-s\">\"int\"</span>, <span class=\"pl-en\">read_line</span>())\n    <span class=\"pl-c\"># nums, k, x = [9,2,2], 3, 3</span>\n    <span class=\"pl-s1\">ans</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">Solution</span>().<span class=\"pl-c1\">findXSum</span>(<span class=\"pl-s1\">nums</span>, <span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">x</span>)\n    <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"<span class=\"pl-cce\">\\n</span>output:\"</span>, <span class=\"pl-en\">serialize</span>(<span class=\"pl-s1\">ans</span>, <span class=\"pl-s\">\"integer[]\"</span>))</pre></div>\n",
    "created": "2024-12-10T13:50:36+00:00",
    "created_utc": "2024-12-10T13:50:36+00:00",
    "updated": "2024-12-10T13:50:36+00:00",
    "updated_utc": "2024-12-10T13:50:36+00:00"
  }
}
