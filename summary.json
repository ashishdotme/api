{
  "locations": [
    {
      "id": 5261,
      "batteryState": "unplugged",
      "coordinates": "{\"-6.2261924\",\"53.2628103\"}",
      "batteryLevel": 45,
      "timestamp": "2025-01-05T17:39:01.000Z",
      "createdAt": "2025-01-05T17:39:02.062Z",
      "updatedAt": "2025-01-05T17:39:02.062Z"
    }
  ],
  "steps": [
    {
      "id": 8891,
      "stepCount": 6304,
      "date": "1/2/25",
      "fullDate": "2025-01-02T00:00:00.000Z",
      "createdAt": "2025-01-03T00:41:33.394Z",
      "updatedAt": "2025-01-03T00:41:33.394Z"
    }
  ],
  "sleep": [
    {
      "id": 227,
      "sleep": "6.3",
      "date": "12/20/24",
      "fullDate": "2024-12-20T00:00:00.000Z",
      "sleepStart": "2024-12-20T02:36:00.000Z",
      "sleepEnd": "2024-12-20T08:31:59.000Z",
      "createdAt": "2024-12-21T01:07:24.195Z",
      "updatedAt": "2024-12-21T01:07:24.195Z"
    }
  ],
  "word": [
    {
      "id": 1,
      "word": "clandestine",
      "meaning": "characterized by, done in, or executed with secrecy or concealment, especially for purposes of subversion or deception; private or surreptitious",
      "pronounciation": "klan-des-tin",
      "sentences": "Their clandestine meetings went undiscovered for two years.",
      "createdAt": "2022-01-24T19:45:33.772Z",
      "updatedAt": "2022-01-24T19:45:33.772Z"
    }
  ],
  "quote": [
    {
      "id": 1,
      "quote": "Kindness is the language which the deaf can hear and the blind can see",
      "category": "Motivational",
      "author": "Mark Twain",
      "createdAt": "2024-10-21T22:28:52.934Z",
      "updatedAt": "2024-10-21T22:28:52.934Z"
    }
  ],
  "shows": [
    {
      "id": 22,
      "title": "Peep Show Season 9",
      "language": "English",
      "showName": "Peep Show",
      "description": "Mark and Jez are a couple of twenty-something roommates who have nothing in common - except for the fact that their lives are anything but normal. Mayhem ensues as the pair strive to cope with day-to-day life.",
      "seasonNumber": 9,
      "year": 2003,
      "genre": "Comedy",
      "startedDate": "2022-01-31T00:00:00.000Z",
      "completedDate": null,
      "status": "Started",
      "loved": true,
      "imdbRating": "8.6",
      "imdbId": "tt0387764",
      "createdAt": "2022-02-01T01:30:32.275Z",
      "updatedAt": "2022-02-01T01:30:32.275Z"
    }
  ],
  "books": [
    {
      "id": 11,
      "title": "Atomic Habits",
      "author": " James Clear",
      "poster": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1655988385i/40121378.jpg",
      "description": "No matter your goals, Atomic Habits offers a proven framework for improvingâ€”every day. James Clear, one of the world's leading experts on habit formation, reveals practical strategies that will teach you exactly how to form good habits, break bad ones, and master the tiny behaviors that lead to remarkable results.",
      "notes": "Atomic Habits",
      "year": 2018,
      "genre": "Personal Development",
      "completedDate": "2023-02-08T00:00:00.000Z",
      "loved": true,
      "createdAt": "2024-10-22T14:53:34.755Z",
      "updatedAt": "2024-10-22T14:53:34.755Z"
    }
  ],
  "courses": [
    {
      "id": 2,
      "title": "MERN Stack Front To Back: Full Stack React, Redux & Node.js",
      "description": "Build and deploy a social network with Node.js, Express, React, Redux & MongoDB",
      "author": "Brad Traversy",
      "category": "React",
      "notes": "NA",
      "completedDate": "2019-01-02T00:00:00.000Z",
      "platform": "Udemy",
      "createdAt": "2022-01-21T03:28:37.957Z",
      "updatedAt": "2022-01-21T03:28:37.957Z"
    }
  ],
  "movies": [
    {
      "id": 166,
      "title": "The Exorcist",
      "description": "When a mysterious entity possesses a young girl, her mother seeks the help of two Catholic priests to save her life.",
      "review": null,
      "language": "English",
      "year": 1973,
      "genre": "Horror",
      "viewingDate": "2024-12-02T04:53:18.239Z",
      "loved": true,
      "imdbRating": "8.1",
      "imdbId": "tt0070047",
      "createdAt": "2024-12-02T14:59:17.397Z",
      "updatedAt": "2024-12-02T14:59:17.397Z"
    }
  ],
  "tasks": [],
  "updates": [
    {
      "id": 11,
      "category": "Life",
      "content": null,
      "title": "Moved to Dublin, Ireland",
      "date": "2021-09-13T10:29:42.297Z",
      "createdAt": "2024-09-15T13:36:36.858Z",
      "updatedAt": "2024-09-15T13:36:36.858Z"
    },
    {
      "id": 10,
      "category": "Life",
      "content": null,
      "title": "Started job at Honeywell, India",
      "date": "2020-10-12T10:29:42.297Z",
      "createdAt": "2024-09-15T13:32:54.840Z",
      "updatedAt": "2024-09-15T13:32:54.840Z"
    },
    {
      "id": 9,
      "category": "Life",
      "content": null,
      "title": "Started job at Amdocs, India",
      "date": "2019-01-19T10:29:42.297Z",
      "createdAt": "2024-09-15T13:28:28.681Z",
      "updatedAt": "2024-09-15T13:33:11.559Z"
    },
    {
      "id": 8,
      "category": "Life",
      "content": null,
      "title": "Started job at Nitor Infotech",
      "date": "2016-06-27T10:29:42.000Z",
      "createdAt": "2024-09-15T13:27:56.348Z",
      "updatedAt": "2024-09-15T13:35:21.819Z"
    },
    {
      "id": 7,
      "category": "Life",
      "content": null,
      "title": "Moved to Pune, India",
      "date": "2016-06-17T10:29:42.000Z",
      "createdAt": "2024-09-15T13:22:04.990Z",
      "updatedAt": "2024-09-15T13:35:34.498Z"
    },
    {
      "id": 6,
      "category": "Life",
      "content": null,
      "title": "Graduated in Computer Science and Engineering from Nagpur University, India",
      "date": "2016-05-30T10:29:42.297Z",
      "createdAt": "2024-09-15T13:21:23.009Z",
      "updatedAt": "2024-09-15T13:32:38.727Z"
    },
    {
      "id": 5,
      "category": "Life",
      "content": null,
      "title": "Born in Chhattisgarh, India",
      "date": "1993-06-04T10:29:42.297Z",
      "createdAt": "2024-09-15T13:19:16.078Z",
      "updatedAt": "2024-09-15T13:19:16.078Z"
    }
  ],
  "listens": [
    {
      "id": 1294,
      "title": "Parvati Boli Shankar Se",
      "artist": "Hansraj Raghuwanshi",
      "album": "Parvati Boli Shankar Se",
      "releaseYear": null,
      "genre": null,
      "listenDate": "2025-01-05T13:07:39.000Z",
      "trackNumber": null,
      "createdAt": "2025-01-05T13:07:41.793Z",
      "updatedAt": "2025-01-05T13:07:41.793Z"
    }
  ],
  "github": {
    "lastCommit": "2025-01-05T12:30:52Z",
    "recentRepos": [
      {
        "name": "leetcode-python",
        "pushedAt": "2025-01-05T12:30:53Z"
      },
      {
        "name": "omakub",
        "pushedAt": "2024-12-16T20:11:21Z"
      },
      {
        "name": "books.ashish.me",
        "pushedAt": "2024-12-05T23:03:00Z"
      },
      {
        "name": "shows.ashish.me",
        "pushedAt": "2024-12-05T23:01:49Z"
      },
      {
        "name": "movies.ashish.me",
        "pushedAt": "2024-12-05T23:00:50Z"
      },
      {
        "name": "wiki.ashish.me",
        "pushedAt": "2024-11-20T00:13:30Z"
      },
      {
        "name": "dotfiles",
        "pushedAt": "2024-11-19T23:35:30Z"
      },
      {
        "name": "cli",
        "pushedAt": "2024-11-11T22:05:56Z"
      },
      {
        "name": "blog",
        "pushedAt": "2024-11-11T15:34:12Z"
      },
      {
        "name": "workers",
        "pushedAt": "2024-11-10T10:49:26Z"
      },
      {
        "name": "ashishdotme-utils",
        "pushedAt": "2024-11-09T00:31:07Z"
      },
      {
        "name": "npm-library-starter",
        "pushedAt": "2024-11-08T23:32:13Z"
      },
      {
        "name": "task-tracker",
        "pushedAt": "2024-11-08T23:08:27Z"
      },
      {
        "name": "jobsapi.ashish.me",
        "pushedAt": "2024-11-05T23:21:30Z"
      },
      {
        "name": "dashy",
        "pushedAt": "2024-10-16T17:47:56Z"
      },
      {
        "name": "dashboard.ashish.me",
        "pushedAt": "2024-09-14T17:51:29Z"
      }
    ]
  },
  "lastLeetcode": {
    "path": "Array_Easy_1002-find-common-characters_solution.py",
    "title": "solution.py",
    "body": "```python  \n# Created by Ashish Patel at 2025/01/05 11:20\n# leetgo: 1.4.13\n# https://leetcode.com/problems/find-common-characters/\n\n\"\"\"\n1002. Find Common Characters (Easy)\nGiven a string array words, return an array of all characters that show up in all strings within\nthe  words (including duplicates). You may return the answer in **any order**.\n\n**Example 1:**\n\n\nInput: words = [\"bella\",\"label\",\"roller\"]\nOutput: [\"e\",\"l\",\"l\"]\n\n\n**Example 2:**\n\n\nInput: words = [\"cool\",\"lock\",\"cook\"]\nOutput: [\"c\",\"o\"]\n\n\n**Constraints:**\n\n- 1 <= words.length <= 100\n- 1 <= words[i].length <= 100\n- words[i] consists of lowercase English letters.\n\n\"\"\"\n\nfrom typing import *\nfrom leetgo_py import *\n\nimport bisect\nimport collections \nimport functools\nimport heapq \nimport itertools \nimport operator\nimport math \nimport string\n\n# @lc code=begin\n\nclass Solution:\n    def commonChars(self, words: List[str]) -> List[str]:\n        counts = Counter(words[0])\n        print(counts)\n        for word in words[1:]:\n            counts &= Counter(word)\n        result = []\n        for char, count in counts.items():\n            result.extend([char]*count)\n        return result\n# @lc code=end\n\nif __name__ == \"__main__\":\n    words = [\"bella\",\"label\",\"roller\"]\n    ans = Solution().commonChars(words)\n    print(\"\\noutput:\", serialize(ans, \"string[]\"))\n```",
    "topic1": "Array",
    "topic2": "Easy",
    "topic3": "1002-find-common-characters",
    "url": "https://github.com/ashishdotme/leetcode-python/blob/master/Array/Easy/1002-find-common-characters/solution.py",
    "slug": "solution",
    "html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"># Created by Ashish Patel at 2025/01/05 11:20</span>\n<span class=\"pl-c\"># leetgo: 1.4.13</span>\n<span class=\"pl-c\"># https://leetcode.com/problems/find-common-characters/</span>\n\n<span class=\"pl-s\">\"\"\"</span>\n<span class=\"pl-s\">1002. Find Common Characters (Easy)</span>\n<span class=\"pl-s\">Given a string array words, return an array of all characters that show up in all strings within</span>\n<span class=\"pl-s\">the  words (including duplicates). You may return the answer in **any order**.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 1:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: words = [\"bella\",\"label\",\"roller\"]</span>\n<span class=\"pl-s\">Output: [\"e\",\"l\",\"l\"]</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 2:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: words = [\"cool\",\"lock\",\"cook\"]</span>\n<span class=\"pl-s\">Output: [\"c\",\"o\"]</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Constraints:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">- 1 &lt;= words.length &lt;= 100</span>\n<span class=\"pl-s\">- 1 &lt;= words[i].length &lt;= 100</span>\n<span class=\"pl-s\">- words[i] consists of lowercase English letters.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">\"\"\"</span>\n\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">typing</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">leetgo_py</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">bisect</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">collections</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">functools</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">heapq</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">itertools</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">operator</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">math</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">string</span>\n\n<span class=\"pl-c\"># @lc code=begin</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">Solution</span>:\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">commonChars</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">words</span>: <span class=\"pl-v\">List</span>[<span class=\"pl-smi\">str</span>]) <span class=\"pl-c1\">-&gt;</span> <span class=\"pl-v\">List</span>[<span class=\"pl-smi\">str</span>]:\n        <span class=\"pl-s1\">counts</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">Counter</span>(<span class=\"pl-s1\">words</span>[<span class=\"pl-c1\">0</span>])\n        <span class=\"pl-en\">print</span>(<span class=\"pl-s1\">counts</span>)\n        <span class=\"pl-k\">for</span> <span class=\"pl-s1\">word</span> <span class=\"pl-c1\">in</span> <span class=\"pl-s1\">words</span>[<span class=\"pl-c1\">1</span>:]:\n            <span class=\"pl-s1\">counts</span> <span class=\"pl-c1\">&amp;=</span> <span class=\"pl-en\">Counter</span>(<span class=\"pl-s1\">word</span>)\n        <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> []\n        <span class=\"pl-k\">for</span> <span class=\"pl-s1\">char</span>, <span class=\"pl-s1\">count</span> <span class=\"pl-c1\">in</span> <span class=\"pl-s1\">counts</span>.<span class=\"pl-c1\">items</span>():\n            <span class=\"pl-s1\">result</span>.<span class=\"pl-c1\">extend</span>([<span class=\"pl-s1\">char</span>]<span class=\"pl-c1\">*</span><span class=\"pl-s1\">count</span>)\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">result</span>\n<span class=\"pl-c\"># @lc code=end</span>\n\n<span class=\"pl-k\">if</span> <span class=\"pl-s1\">__name__</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s\">\"__main__\"</span>:\n    <span class=\"pl-s1\">words</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">\"bella\"</span>,<span class=\"pl-s\">\"label\"</span>,<span class=\"pl-s\">\"roller\"</span>]\n    <span class=\"pl-s1\">ans</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">Solution</span>().<span class=\"pl-c1\">commonChars</span>(<span class=\"pl-s1\">words</span>)\n    <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"<span class=\"pl-cce\">\\n</span>output:\"</span>, <span class=\"pl-en\">serialize</span>(<span class=\"pl-s1\">ans</span>, <span class=\"pl-s\">\"string[]\"</span>))</pre></div>\n",
    "created": "2025-01-05T12:30:20+00:00",
    "created_utc": "2025-01-05T12:30:20+00:00",
    "updated": "2025-01-05T12:30:20+00:00",
    "updated_utc": "2025-01-05T12:30:20+00:00"
  }
}
