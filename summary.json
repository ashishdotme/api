{
  "locations": [
    {
      "id": 4702,
      "batteryState": "charging",
      "coordinates": "{\"-6.2263197\",\"53.2629535\"}",
      "batteryLevel": 25,
      "timestamp": "2024-12-15T13:22:46.000Z",
      "createdAt": "2024-12-15T13:22:48.017Z",
      "updatedAt": "2024-12-15T13:22:48.017Z"
    }
  ],
  "steps": [
    {
      "id": 8824,
      "stepCount": 8126,
      "date": "12/22/24",
      "fullDate": "2024-12-22T00:00:00.000Z",
      "createdAt": "2024-12-23T01:00:02.588Z",
      "updatedAt": "2024-12-23T01:00:02.588Z"
    }
  ],
  "sleep": [
    {
      "id": 227,
      "sleep": "6.3",
      "date": "12/20/24",
      "fullDate": "2024-12-20T00:00:00.000Z",
      "sleepStart": "2024-12-20T02:36:00.000Z",
      "sleepEnd": "2024-12-20T08:31:59.000Z",
      "createdAt": "2024-12-21T01:07:24.195Z",
      "updatedAt": "2024-12-21T01:07:24.195Z"
    }
  ],
  "word": [
    {
      "id": 1,
      "word": "clandestine",
      "meaning": "characterized by, done in, or executed with secrecy or concealment, especially for purposes of subversion or deception; private or surreptitious",
      "pronounciation": "klan-des-tin",
      "sentences": "Their clandestine meetings went undiscovered for two years.",
      "createdAt": "2022-01-24T19:45:33.772Z",
      "updatedAt": "2022-01-24T19:45:33.772Z"
    }
  ],
  "quote": [
    {
      "id": 2,
      "quote": "If something upsets you, it is not that thing, but your judgement of it, that causes you distress. And that judgement is in your power",
      "category": "Motivational",
      "author": "Marcus Aurelius",
      "createdAt": "2024-10-21T22:30:21.598Z",
      "updatedAt": "2024-10-21T22:30:21.598Z"
    }
  ],
  "shows": [
    {
      "id": 22,
      "title": "Peep Show Season 9",
      "language": "English",
      "showName": "Peep Show",
      "description": "Mark and Jez are a couple of twenty-something roommates who have nothing in common - except for the fact that their lives are anything but normal. Mayhem ensues as the pair strive to cope with day-to-day life.",
      "seasonNumber": 9,
      "year": 2003,
      "genre": "Comedy",
      "startedDate": "2022-01-31T00:00:00.000Z",
      "completedDate": null,
      "status": "Started",
      "loved": true,
      "imdbRating": "8.6",
      "imdbId": "tt0387764",
      "createdAt": "2022-02-01T01:30:32.275Z",
      "updatedAt": "2022-02-01T01:30:32.275Z"
    }
  ],
  "books": [
    {
      "id": 11,
      "title": "Atomic Habits",
      "author": " James Clear",
      "poster": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1655988385i/40121378.jpg",
      "description": "No matter your goals, Atomic Habits offers a proven framework for improvingâ€”every day. James Clear, one of the world's leading experts on habit formation, reveals practical strategies that will teach you exactly how to form good habits, break bad ones, and master the tiny behaviors that lead to remarkable results.",
      "notes": "Atomic Habits",
      "year": 2018,
      "genre": "Personal Development",
      "completedDate": "2023-02-08T00:00:00.000Z",
      "loved": true,
      "createdAt": "2024-10-22T14:53:34.755Z",
      "updatedAt": "2024-10-22T14:53:34.755Z"
    }
  ],
  "courses": [
    {
      "id": 2,
      "title": "MERN Stack Front To Back: Full Stack React, Redux & Node.js",
      "description": "Build and deploy a social network with Node.js, Express, React, Redux & MongoDB",
      "author": "Brad Traversy",
      "category": "React",
      "notes": "NA",
      "completedDate": "2019-01-02T00:00:00.000Z",
      "platform": "Udemy",
      "createdAt": "2022-01-21T03:28:37.957Z",
      "updatedAt": "2022-01-21T03:28:37.957Z"
    }
  ],
  "movies": [
    {
      "id": 166,
      "title": "The Exorcist",
      "description": "When a mysterious entity possesses a young girl, her mother seeks the help of two Catholic priests to save her life.",
      "review": null,
      "language": "English",
      "year": 1973,
      "genre": "Horror",
      "viewingDate": "2024-12-02T04:53:18.239Z",
      "loved": true,
      "imdbRating": "8.1",
      "imdbId": "tt0070047",
      "createdAt": "2024-12-02T14:59:17.397Z",
      "updatedAt": "2024-12-02T14:59:17.397Z"
    }
  ],
  "tasks": [
    {
      "id": 565,
      "content": "Organize photos",
      "category": "Now",
      "projectId": "671d02e0eba7b8000000022f",
      "todoId": "672f928deba7b80000000208",
      "completed": false,
      "completedDate": null,
      "dueDate": "2024-11-09T16:49:52.410Z",
      "createdAt": "2024-11-09T16:49:52.411Z",
      "updatedAt": "2024-11-09T16:49:52.411Z"
    },
    {
      "id": 568,
      "content": "Solve Leetcode 3349",
      "category": "Now",
      "projectId": "671d02e0eba7b8000000022f",
      "todoId": "6733eafdeba7b80000000355",
      "completed": false,
      "completedDate": null,
      "dueDate": "2024-11-12T23:56:27.047Z",
      "createdAt": "2024-11-12T23:56:27.048Z",
      "updatedAt": "2024-11-12T23:56:27.048Z"
    }
  ],
  "updates": [
    {
      "id": 11,
      "category": "Life",
      "content": null,
      "title": "Moved to Dublin, Ireland",
      "date": "2021-09-13T10:29:42.297Z",
      "createdAt": "2024-09-15T13:36:36.858Z",
      "updatedAt": "2024-09-15T13:36:36.858Z"
    },
    {
      "id": 10,
      "category": "Life",
      "content": null,
      "title": "Started job at Honeywell, India",
      "date": "2020-10-12T10:29:42.297Z",
      "createdAt": "2024-09-15T13:32:54.840Z",
      "updatedAt": "2024-09-15T13:32:54.840Z"
    },
    {
      "id": 9,
      "category": "Life",
      "content": null,
      "title": "Started job at Amdocs, India",
      "date": "2019-01-19T10:29:42.297Z",
      "createdAt": "2024-09-15T13:28:28.681Z",
      "updatedAt": "2024-09-15T13:33:11.559Z"
    },
    {
      "id": 8,
      "category": "Life",
      "content": null,
      "title": "Started job at Nitor Infotech",
      "date": "2016-06-27T10:29:42.000Z",
      "createdAt": "2024-09-15T13:27:56.348Z",
      "updatedAt": "2024-09-15T13:35:21.819Z"
    },
    {
      "id": 7,
      "category": "Life",
      "content": null,
      "title": "Moved to Pune, India",
      "date": "2016-06-17T10:29:42.000Z",
      "createdAt": "2024-09-15T13:22:04.990Z",
      "updatedAt": "2024-09-15T13:35:34.498Z"
    },
    {
      "id": 6,
      "category": "Life",
      "content": null,
      "title": "Graduated in Computer Science and Engineering from Nagpur University, India",
      "date": "2016-05-30T10:29:42.297Z",
      "createdAt": "2024-09-15T13:21:23.009Z",
      "updatedAt": "2024-09-15T13:32:38.727Z"
    },
    {
      "id": 5,
      "category": "Life",
      "content": null,
      "title": "Born in Chhattisgarh, India",
      "date": "1993-06-04T10:29:42.297Z",
      "createdAt": "2024-09-15T13:19:16.078Z",
      "updatedAt": "2024-09-15T13:19:16.078Z"
    }
  ],
  "listens": [
    {
      "id": 1222,
      "title": "Pasoori",
      "artist": "Shae Gill",
      "album": "Pasoori",
      "releaseYear": null,
      "genre": null,
      "listenDate": "2024-12-19T15:49:19.000Z",
      "trackNumber": null,
      "createdAt": "2024-12-19T15:49:20.469Z",
      "updatedAt": "2024-12-19T15:49:20.469Z"
    }
  ],
  "github": {
    "lastCommit": "2024-12-23T15:41:35Z",
    "recentRepos": [
      {
        "name": "leetcode-python",
        "pushedAt": "2024-12-23T15:41:36Z"
      },
      {
        "name": "omakub",
        "pushedAt": "2024-12-16T20:11:21Z"
      },
      {
        "name": "books.ashish.me",
        "pushedAt": "2024-12-05T23:03:00Z"
      },
      {
        "name": "shows.ashish.me",
        "pushedAt": "2024-12-05T23:01:49Z"
      },
      {
        "name": "movies.ashish.me",
        "pushedAt": "2024-12-05T23:00:50Z"
      },
      {
        "name": "wiki.ashish.me",
        "pushedAt": "2024-11-20T00:13:30Z"
      },
      {
        "name": "dotfiles",
        "pushedAt": "2024-11-19T23:35:30Z"
      },
      {
        "name": "cli",
        "pushedAt": "2024-11-11T22:05:56Z"
      },
      {
        "name": "blog",
        "pushedAt": "2024-11-11T15:34:12Z"
      },
      {
        "name": "workers",
        "pushedAt": "2024-11-10T10:49:26Z"
      },
      {
        "name": "ashishdotme-utils",
        "pushedAt": "2024-11-09T00:31:07Z"
      },
      {
        "name": "npm-library-starter",
        "pushedAt": "2024-11-08T23:32:13Z"
      },
      {
        "name": "task-tracker",
        "pushedAt": "2024-11-08T23:08:27Z"
      },
      {
        "name": "jobsapi.ashish.me",
        "pushedAt": "2024-11-05T23:21:30Z"
      },
      {
        "name": "dashy",
        "pushedAt": "2024-10-16T17:47:56Z"
      },
      {
        "name": "dashboard.ashish.me",
        "pushedAt": "2024-09-14T17:51:29Z"
      }
    ]
  },
  "lastLeetcode": {
    "path": "Array_Easy_0747-largest-number-at-least-twice-of-others_solution.py",
    "title": "solution.py",
    "body": "```python  \n# Created by Ashish Patel at 2024/12/17 15:48\n# leetgo: 1.4.11\n# https://leetcode.com/problems/largest-number-at-least-twice-of-others/\n\n\"\"\"\n747. Largest Number At Least Twice of Others (Easy)\nYou are given an integer array nums where the largest integer is **unique**.\n\nDetermine whether the largest element in the array is **at least twice** as much as every other\nnumber in the array. If it is, return the **index** of the largest element, or return  -1\notherwise.\n\n**Example 1:**\n\n\nInput: nums = [3,6,1,0]\nOutput: 1\nExplanation: 6 is the largest integer.\nFor every other number in the array x, 6 is at least twice as big as x.\nThe index of value 6 is 1, so we return 1.\n\n\n**Example 2:**\n\n\nInput: nums = [1,2,3,4]\nOutput: -1\nExplanation: 4 is less than twice the value of 3, so we return -1.\n\n\n**Constraints:**\n\n- 2 <= nums.length <= 50\n- 0 <= nums[i] <= 100\n- The largest element in nums is unique.\n\n\"\"\"\n\nfrom typing import *\nfrom leetgo_py import *\n\nimport bisect\nimport collections \nimport functools\nimport heapq \nimport itertools \nimport operator\nimport math \nimport string\nimport leetcode as lc\n\n# @lc code=begin\n\nclass Solution:\n    def dominantIndex(self, nums: List[int]) -> int:\n        first_max, second_max = -1, -1\n        for i in range(len(nums)):\n            if nums[i] > first_max and nums[i] > second_max:\n                second_max = first_max\n                first_max = nums[i]\n                \n            if nums[i] < first_max and nums[i] > second_max:\n                second_max = nums[i]\n        if first_max >= second_max * 2:\n            return nums.index(first_max)\n        else:\n            return -1\n\n# @lc code=end\n\nif __name__ == \"__main__\":\n    nums = [0,0,3,2]\n    ans = Solution().dominantIndex(nums)\n    print(\"\\noutput:\", serialize(ans, \"integer\"))\n```",
    "topic1": "Array",
    "topic2": "Easy",
    "topic3": "0747-largest-number-at-least-twice-of-others",
    "url": "https://github.com/ashishdotme/leetcode-python/blob/master/Array/Easy/0747-largest-number-at-least-twice-of-others/solution.py",
    "slug": "solution",
    "html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"># Created by Ashish Patel at 2024/12/17 15:48</span>\n<span class=\"pl-c\"># leetgo: 1.4.11</span>\n<span class=\"pl-c\"># https://leetcode.com/problems/largest-number-at-least-twice-of-others/</span>\n\n<span class=\"pl-s\">\"\"\"</span>\n<span class=\"pl-s\">747. Largest Number At Least Twice of Others (Easy)</span>\n<span class=\"pl-s\">You are given an integer array nums where the largest integer is **unique**.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Determine whether the largest element in the array is **at least twice** as much as every other</span>\n<span class=\"pl-s\">number in the array. If it is, return the **index** of the largest element, or return  -1</span>\n<span class=\"pl-s\">otherwise.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 1:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: nums = [3,6,1,0]</span>\n<span class=\"pl-s\">Output: 1</span>\n<span class=\"pl-s\">Explanation: 6 is the largest integer.</span>\n<span class=\"pl-s\">For every other number in the array x, 6 is at least twice as big as x.</span>\n<span class=\"pl-s\">The index of value 6 is 1, so we return 1.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 2:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: nums = [1,2,3,4]</span>\n<span class=\"pl-s\">Output: -1</span>\n<span class=\"pl-s\">Explanation: 4 is less than twice the value of 3, so we return -1.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Constraints:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">- 2 &lt;= nums.length &lt;= 50</span>\n<span class=\"pl-s\">- 0 &lt;= nums[i] &lt;= 100</span>\n<span class=\"pl-s\">- The largest element in nums is unique.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">\"\"\"</span>\n\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">typing</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">leetgo_py</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">bisect</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">collections</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">functools</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">heapq</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">itertools</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">operator</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">math</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">string</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">leetcode</span> <span class=\"pl-k\">as</span> <span class=\"pl-s1\">lc</span>\n\n<span class=\"pl-c\"># @lc code=begin</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">Solution</span>:\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">dominantIndex</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">nums</span>: <span class=\"pl-v\">List</span>[<span class=\"pl-smi\">int</span>]) <span class=\"pl-c1\">-&gt;</span> <span class=\"pl-smi\">int</span>:\n        <span class=\"pl-s1\">first_max</span>, <span class=\"pl-s1\">second_max</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">-</span><span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">-</span><span class=\"pl-c1\">1</span>\n        <span class=\"pl-k\">for</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">in</span> <span class=\"pl-en\">range</span>(<span class=\"pl-en\">len</span>(<span class=\"pl-s1\">nums</span>)):\n            <span class=\"pl-k\">if</span> <span class=\"pl-s1\">nums</span>[<span class=\"pl-s1\">i</span>] <span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">first_max</span> <span class=\"pl-c1\">and</span> <span class=\"pl-s1\">nums</span>[<span class=\"pl-s1\">i</span>] <span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">second_max</span>:\n                <span class=\"pl-s1\">second_max</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">first_max</span>\n                <span class=\"pl-s1\">first_max</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">nums</span>[<span class=\"pl-s1\">i</span>]\n                \n            <span class=\"pl-k\">if</span> <span class=\"pl-s1\">nums</span>[<span class=\"pl-s1\">i</span>] <span class=\"pl-c1\">&lt;</span> <span class=\"pl-s1\">first_max</span> <span class=\"pl-c1\">and</span> <span class=\"pl-s1\">nums</span>[<span class=\"pl-s1\">i</span>] <span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">second_max</span>:\n                <span class=\"pl-s1\">second_max</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">nums</span>[<span class=\"pl-s1\">i</span>]\n        <span class=\"pl-k\">if</span> <span class=\"pl-s1\">first_max</span> <span class=\"pl-c1\">&gt;=</span> <span class=\"pl-s1\">second_max</span> <span class=\"pl-c1\">*</span> <span class=\"pl-c1\">2</span>:\n            <span class=\"pl-k\">return</span> <span class=\"pl-s1\">nums</span>.<span class=\"pl-c1\">index</span>(<span class=\"pl-s1\">first_max</span>)\n        <span class=\"pl-k\">else</span>:\n            <span class=\"pl-k\">return</span> <span class=\"pl-c1\">-</span><span class=\"pl-c1\">1</span>\n\n<span class=\"pl-c\"># @lc code=end</span>\n\n<span class=\"pl-k\">if</span> <span class=\"pl-s1\">__name__</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s\">\"__main__\"</span>:\n    <span class=\"pl-s1\">nums</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">2</span>]\n    <span class=\"pl-s1\">ans</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">Solution</span>().<span class=\"pl-c1\">dominantIndex</span>(<span class=\"pl-s1\">nums</span>)\n    <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"<span class=\"pl-cce\">\\n</span>output:\"</span>, <span class=\"pl-en\">serialize</span>(<span class=\"pl-s1\">ans</span>, <span class=\"pl-s\">\"integer\"</span>))</pre></div>\n",
    "created": "2024-12-23T15:41:04+00:00",
    "created_utc": "2024-12-23T15:41:04+00:00",
    "updated": "2024-12-23T15:41:04+00:00",
    "updated_utc": "2024-12-23T15:41:04+00:00"
  }
}
