{
  "locations": [
    {
      "id": 6450,
      "batteryState": "charging",
      "coordinates": "{\"-6.2262223\",\"53.2630271\"}",
      "batteryLevel": 25,
      "timestamp": "2025-01-12T14:01:16.000Z",
      "createdAt": "2025-01-12T14:01:17.105Z",
      "updatedAt": "2025-01-12T14:01:17.105Z"
    }
  ],
  "steps": [
    {
      "id": 9016,
      "stepCount": 449,
      "date": "1/15/25",
      "fullDate": "2025-01-15T00:00:00.000Z",
      "createdAt": "2025-01-16T00:45:16.028Z",
      "updatedAt": "2025-01-16T00:45:16.028Z"
    }
  ],
  "sleep": [
    {
      "id": 255,
      "sleep": "8.2",
      "date": "1/6/25",
      "fullDate": "2025-01-06T00:00:00.000Z",
      "sleepStart": "2025-01-06T01:18:00.000Z",
      "sleepEnd": "2025-01-06T09:19:59.000Z",
      "createdAt": "2025-01-07T19:43:29.703Z",
      "updatedAt": "2025-01-07T19:43:29.703Z"
    }
  ],
  "word": [
    {
      "id": 1,
      "word": "clandestine",
      "meaning": "characterized by, done in, or executed with secrecy or concealment, especially for purposes of subversion or deception; private or surreptitious",
      "pronounciation": "klan-des-tin",
      "sentences": "Their clandestine meetings went undiscovered for two years.",
      "createdAt": "2022-01-24T19:45:33.772Z",
      "updatedAt": "2022-01-24T19:45:33.772Z"
    }
  ],
  "quote": [
    {
      "id": 2,
      "quote": "If something upsets you, it is not that thing, but your judgement of it, that causes you distress. And that judgement is in your power",
      "category": "Motivational",
      "author": "Marcus Aurelius",
      "createdAt": "2024-10-21T22:30:21.598Z",
      "updatedAt": "2024-10-21T22:30:21.598Z"
    }
  ],
  "shows": [
    {
      "id": 22,
      "title": "Peep Show Season 9",
      "language": "English",
      "showName": "Peep Show",
      "description": "Mark and Jez are a couple of twenty-something roommates who have nothing in common - except for the fact that their lives are anything but normal. Mayhem ensues as the pair strive to cope with day-to-day life.",
      "seasonNumber": 9,
      "year": 2003,
      "genre": "Comedy",
      "startedDate": "2022-01-31T00:00:00.000Z",
      "completedDate": null,
      "status": "Started",
      "loved": true,
      "imdbRating": "8.6",
      "imdbId": "tt0387764",
      "createdAt": "2022-02-01T01:30:32.275Z",
      "updatedAt": "2022-02-01T01:30:32.275Z"
    }
  ],
  "books": [
    {
      "id": 11,
      "title": "Atomic Habits",
      "author": " James Clear",
      "poster": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1655988385i/40121378.jpg",
      "description": "No matter your goals, Atomic Habits offers a proven framework for improving—every day. James Clear, one of the world's leading experts on habit formation, reveals practical strategies that will teach you exactly how to form good habits, break bad ones, and master the tiny behaviors that lead to remarkable results.",
      "notes": "Atomic Habits",
      "year": 2018,
      "genre": "Personal Development",
      "completedDate": "2023-02-08T00:00:00.000Z",
      "loved": true,
      "createdAt": "2024-10-22T14:53:34.755Z",
      "updatedAt": "2024-10-22T14:53:34.755Z"
    }
  ],
  "courses": [
    {
      "id": 2,
      "title": "MERN Stack Front To Back: Full Stack React, Redux & Node.js",
      "description": "Build and deploy a social network with Node.js, Express, React, Redux & MongoDB",
      "author": "Brad Traversy",
      "category": "React",
      "notes": "NA",
      "completedDate": "2019-01-02T00:00:00.000Z",
      "platform": "Udemy",
      "createdAt": "2022-01-21T03:28:37.957Z",
      "updatedAt": "2022-01-21T03:28:37.957Z"
    }
  ],
  "movies": [
    {
      "id": 166,
      "title": "The Exorcist",
      "description": "When a mysterious entity possesses a young girl, her mother seeks the help of two Catholic priests to save her life.",
      "review": null,
      "language": "English",
      "year": 1973,
      "genre": "Horror",
      "viewingDate": "2024-12-02T04:53:18.239Z",
      "loved": true,
      "imdbRating": "8.1",
      "imdbId": "tt0070047",
      "createdAt": "2024-12-02T14:59:17.397Z",
      "updatedAt": "2024-12-02T14:59:17.397Z"
    }
  ],
  "tasks": [],
  "updates": [
    {
      "id": 11,
      "category": "Life",
      "content": null,
      "title": "Moved to Dublin, Ireland",
      "date": "2021-09-13T10:29:42.297Z",
      "createdAt": "2024-09-15T13:36:36.858Z",
      "updatedAt": "2024-09-15T13:36:36.858Z"
    },
    {
      "id": 10,
      "category": "Life",
      "content": null,
      "title": "Started job at Honeywell, India",
      "date": "2020-10-12T10:29:42.297Z",
      "createdAt": "2024-09-15T13:32:54.840Z",
      "updatedAt": "2024-09-15T13:32:54.840Z"
    },
    {
      "id": 9,
      "category": "Life",
      "content": null,
      "title": "Started job at Amdocs, India",
      "date": "2019-01-19T10:29:42.297Z",
      "createdAt": "2024-09-15T13:28:28.681Z",
      "updatedAt": "2024-09-15T13:33:11.559Z"
    },
    {
      "id": 8,
      "category": "Life",
      "content": null,
      "title": "Started job at Nitor Infotech",
      "date": "2016-06-27T10:29:42.000Z",
      "createdAt": "2024-09-15T13:27:56.348Z",
      "updatedAt": "2024-09-15T13:35:21.819Z"
    },
    {
      "id": 7,
      "category": "Life",
      "content": null,
      "title": "Moved to Pune, India",
      "date": "2016-06-17T10:29:42.000Z",
      "createdAt": "2024-09-15T13:22:04.990Z",
      "updatedAt": "2024-09-15T13:35:34.498Z"
    },
    {
      "id": 6,
      "category": "Life",
      "content": null,
      "title": "Graduated in Computer Science and Engineering from Nagpur University, India",
      "date": "2016-05-30T10:29:42.297Z",
      "createdAt": "2024-09-15T13:21:23.009Z",
      "updatedAt": "2024-09-15T13:32:38.727Z"
    },
    {
      "id": 5,
      "category": "Life",
      "content": null,
      "title": "Born in Chhattisgarh, India",
      "date": "1993-06-04T10:29:42.297Z",
      "createdAt": "2024-09-15T13:19:16.078Z",
      "updatedAt": "2024-09-15T13:19:16.078Z"
    }
  ],
  "listens": [
    {
      "id": 1319,
      "title": "Chhu Kar Mere Manko - From \"Yaarana\"",
      "artist": "Kishore Kumar",
      "album": "Yaarana (Original Motion Picture Soundtrack)",
      "releaseYear": null,
      "genre": null,
      "listenDate": "2025-01-16T11:02:32.000Z",
      "trackNumber": null,
      "createdAt": "2025-01-16T11:02:34.526Z",
      "updatedAt": "2025-01-16T11:02:34.526Z"
    }
  ],
  "github": {
    "lastCommit": "2025-01-16T18:33:04Z",
    "recentRepos": [
      {
        "name": "leetcode-python",
        "pushedAt": "2025-01-16T18:33:05Z"
      },
      {
        "name": "omakub",
        "pushedAt": "2024-12-16T20:11:21Z"
      },
      {
        "name": "books.ashish.me",
        "pushedAt": "2024-12-05T23:03:00Z"
      },
      {
        "name": "shows.ashish.me",
        "pushedAt": "2024-12-05T23:01:49Z"
      },
      {
        "name": "movies.ashish.me",
        "pushedAt": "2024-12-05T23:00:50Z"
      },
      {
        "name": "wiki.ashish.me",
        "pushedAt": "2024-11-20T00:13:30Z"
      },
      {
        "name": "dotfiles",
        "pushedAt": "2024-11-19T23:35:30Z"
      },
      {
        "name": "cli",
        "pushedAt": "2024-11-11T22:05:56Z"
      },
      {
        "name": "blog",
        "pushedAt": "2024-11-11T15:34:12Z"
      },
      {
        "name": "workers",
        "pushedAt": "2024-11-10T10:49:26Z"
      },
      {
        "name": "ashishdotme-utils",
        "pushedAt": "2024-11-09T00:31:07Z"
      },
      {
        "name": "npm-library-starter",
        "pushedAt": "2024-11-08T23:32:13Z"
      },
      {
        "name": "task-tracker",
        "pushedAt": "2024-11-08T23:08:27Z"
      },
      {
        "name": "jobsapi.ashish.me",
        "pushedAt": "2024-11-05T23:21:30Z"
      },
      {
        "name": "dashy",
        "pushedAt": "2024-10-16T17:47:56Z"
      },
      {
        "name": "dashboard.ashish.me",
        "pushedAt": "2024-09-14T17:51:29Z"
      }
    ]
  },
  "lastLeetcode": {
    "path": "Array_Easy_2144-minimum-cost-of-buying-candies-with-discount_solution.py",
    "title": "solution.py",
    "body": "```python  \n# Created by Ashish Patel at 2025/01/16 11:54\n# leetgo: 1.4.13\n# https://leetcode.com/problems/minimum-cost-of-buying-candies-with-discount/\n\n\"\"\"\n2144. Minimum Cost of Buying Candies With Discount (Easy)\nA shop is selling candies at a discount. For **every two** candies sold, the shop gives a **third**\ncandy for **free**.\n\nThe customer can choose **any** candy to take away for free as long as the cost of the chosen candy\nis less than or equal to the **minimum** cost of the two candies bought.\n\n- For example, if there are 4 candies with costs 1, 2, 3, and 4, and the customer buys\ncandies with costs 2 and 3, they can take the candy with cost 1 for free, but not the candy\nwith cost 4.\n\nGiven a **0-indexed** integer array cost, where cost[i] denotes the cost of the iᵗʰ candy,\nreturn the **minimum cost** of buying **all** the candies.\n\n**Example 1:**\n\n\nInput: cost = [1,2,3]\nOutput: 5\nExplanation: We buy the candies with costs 2 and 3, and take the candy with cost 1 for free.\nThe total cost of buying all candies is 2 + 3 = 5. This is the only way we can buy the candies.\nNote that we cannot buy candies with costs 1 and 3, and then take the candy with cost 2 for free.\nThe cost of the free candy has to be less than or equal to the minimum cost of the purchased\ncandies.\n\n\n**Example 2:**\n\n\nInput: cost = [6,5,7,9,2,2]\nOutput: 23\nExplanation: The way in which we can get the minimum cost is described below:\n- Buy candies with costs 9 and 7\n- Take the candy with cost 6 for free\n- We buy candies with costs 5 and 2\n- Take the last remaining candy with cost 2 for free\nHence, the minimum cost to buy all candies is 9 + 7 + 5 + 2 = 23.\n\n\n**Example 3:**\n\n\nInput: cost = [5,5]\nOutput: 10\nExplanation: Since there are only 2 candies, we buy both of them. There is not a third candy we can\ntake for free.\nHence, the minimum cost to buy all candies is 5 + 5 = 10.\n\n\n**Constraints:**\n\n- 1 <= cost.length <= 100\n- 1 <= cost[i] <= 100\n\n\"\"\"\n\nfrom typing import *\nfrom leetgo_py import *\n\nimport bisect\nimport collections \nimport functools\nimport heapq \nimport itertools \nimport operator\nimport math \nimport string\n\n# @lc code=begin\n\nclass Solution:\n    def minimumCost(self, cost: List[int]) -> int:\n        result = 0\n        cost.sort(reverse=True)\n        for i in range(len(cost)):\n            if i % 3 != 2:\n                result += cost[i]\n        return result\n\n# @lc code=end\n\nif __name__ == \"__main__\":\n    cost = [6,5,7,9,2,2]\n    ans = Solution().minimumCost(cost)\n    print(\"\\noutput:\", serialize(ans, \"integer\"))\n```",
    "topic1": "Array",
    "topic2": "Easy",
    "topic3": "2144-minimum-cost-of-buying-candies-with-discount",
    "url": "https://github.com/ashishdotme/leetcode-python/blob/master/Array/Easy/2144-minimum-cost-of-buying-candies-with-discount/solution.py",
    "slug": "solution",
    "html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"># Created by Ashish Patel at 2025/01/16 11:54</span>\n<span class=\"pl-c\"># leetgo: 1.4.13</span>\n<span class=\"pl-c\"># https://leetcode.com/problems/minimum-cost-of-buying-candies-with-discount/</span>\n\n<span class=\"pl-s\">\"\"\"</span>\n<span class=\"pl-s\">2144. Minimum Cost of Buying Candies With Discount (Easy)</span>\n<span class=\"pl-s\">A shop is selling candies at a discount. For **every two** candies sold, the shop gives a **third**</span>\n<span class=\"pl-s\">candy for **free**.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">The customer can choose **any** candy to take away for free as long as the cost of the chosen candy</span>\n<span class=\"pl-s\">is less than or equal to the **minimum** cost of the two candies bought.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">- For example, if there are 4 candies with costs 1, 2, 3, and 4, and the customer buys</span>\n<span class=\"pl-s\">candies with costs 2 and 3, they can take the candy with cost 1 for free, but not the candy</span>\n<span class=\"pl-s\">with cost 4.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Given a **0-indexed** integer array cost, where cost[i] denotes the cost of the iᵗʰ candy,</span>\n<span class=\"pl-s\">return the **minimum cost** of buying **all** the candies.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 1:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: cost = [1,2,3]</span>\n<span class=\"pl-s\">Output: 5</span>\n<span class=\"pl-s\">Explanation: We buy the candies with costs 2 and 3, and take the candy with cost 1 for free.</span>\n<span class=\"pl-s\">The total cost of buying all candies is 2 + 3 = 5. This is the only way we can buy the candies.</span>\n<span class=\"pl-s\">Note that we cannot buy candies with costs 1 and 3, and then take the candy with cost 2 for free.</span>\n<span class=\"pl-s\">The cost of the free candy has to be less than or equal to the minimum cost of the purchased</span>\n<span class=\"pl-s\">candies.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 2:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: cost = [6,5,7,9,2,2]</span>\n<span class=\"pl-s\">Output: 23</span>\n<span class=\"pl-s\">Explanation: The way in which we can get the minimum cost is described below:</span>\n<span class=\"pl-s\">- Buy candies with costs 9 and 7</span>\n<span class=\"pl-s\">- Take the candy with cost 6 for free</span>\n<span class=\"pl-s\">- We buy candies with costs 5 and 2</span>\n<span class=\"pl-s\">- Take the last remaining candy with cost 2 for free</span>\n<span class=\"pl-s\">Hence, the minimum cost to buy all candies is 9 + 7 + 5 + 2 = 23.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Example 3:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">Input: cost = [5,5]</span>\n<span class=\"pl-s\">Output: 10</span>\n<span class=\"pl-s\">Explanation: Since there are only 2 candies, we buy both of them. There is not a third candy we can</span>\n<span class=\"pl-s\">take for free.</span>\n<span class=\"pl-s\">Hence, the minimum cost to buy all candies is 5 + 5 = 10.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">**Constraints:**</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">- 1 &lt;= cost.length &lt;= 100</span>\n<span class=\"pl-s\">- 1 &lt;= cost[i] &lt;= 100</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">\"\"\"</span>\n\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">typing</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n<span class=\"pl-k\">from</span> <span class=\"pl-s1\">leetgo_py</span> <span class=\"pl-k\">import</span> <span class=\"pl-c1\">*</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">bisect</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">collections</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">functools</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">heapq</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">itertools</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">operator</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">math</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">string</span>\n\n<span class=\"pl-c\"># @lc code=begin</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">Solution</span>:\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">minimumCost</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">cost</span>: <span class=\"pl-v\">List</span>[<span class=\"pl-smi\">int</span>]) <span class=\"pl-c1\">-&gt;</span> <span class=\"pl-smi\">int</span>:\n        <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span>\n        <span class=\"pl-s1\">cost</span>.<span class=\"pl-c1\">sort</span>(<span class=\"pl-s1\">reverse</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)\n        <span class=\"pl-k\">for</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">in</span> <span class=\"pl-en\">range</span>(<span class=\"pl-en\">len</span>(<span class=\"pl-s1\">cost</span>)):\n            <span class=\"pl-k\">if</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">%</span> <span class=\"pl-c1\">3</span> <span class=\"pl-c1\">!=</span> <span class=\"pl-c1\">2</span>:\n                <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">+=</span> <span class=\"pl-s1\">cost</span>[<span class=\"pl-s1\">i</span>]\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">result</span>\n\n<span class=\"pl-c\"># @lc code=end</span>\n\n<span class=\"pl-k\">if</span> <span class=\"pl-s1\">__name__</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s\">\"__main__\"</span>:\n    <span class=\"pl-s1\">cost</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-c1\">6</span>,<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">7</span>,<span class=\"pl-c1\">9</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">2</span>]\n    <span class=\"pl-s1\">ans</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">Solution</span>().<span class=\"pl-c1\">minimumCost</span>(<span class=\"pl-s1\">cost</span>)\n    <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"<span class=\"pl-cce\">\\n</span>output:\"</span>, <span class=\"pl-en\">serialize</span>(<span class=\"pl-s1\">ans</span>, <span class=\"pl-s\">\"integer\"</span>))</pre></div>\n",
    "created": "2025-01-16T18:32:35+00:00",
    "created_utc": "2025-01-16T18:32:35+00:00",
    "updated": "2025-01-16T18:32:35+00:00",
    "updated_utc": "2025-01-16T18:32:35+00:00"
  }
}
